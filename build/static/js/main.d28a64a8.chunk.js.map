{"version":3,"sources":["components/UI/LoadingSpinner.module.css","reducers/uiSlice.js","components/contracts/ContractButton.js","components/events/EventButton.js","components/Header.js","utils/utils.js","components/dashboard/RenewalItem.js","components/contracts/NoContractsFound.js","components/dashboard/UpcomingRenewals.js","components/dashboard/StatBox.js","components/dashboard/StatBoxes.js","components/events/EventItem.js","components/events/NoEventsFound.js","components/events/UpcomingEvents.js","pages/Dashboard.js","components/tables/Selectbox.js","components/tables/Filter.js","components/tables/Search.js","components/tables/FiltersToolbar.js","components/UI/LoadingSpinner.js","components/tables/TableDropdown.js","filters/actionTypes.js","axios/axios.js","constants/ActionTypes.js","actions/events.js","components/tables/Checkbox.js","components/tables/EventsTableRow.js","actions/contracts.js","components/tables/TableRow.js","components/tables/Table.js","components/contracts/ContractList.js","components/UI/UploadThumb.js","components/UI/FormElements.js","components/contracts/ContractForm.js","hooks/use-http.js","actions/uploads.js","actions/notifications.js","components/contracts/ContractModal.js","pages/Contracts.js","components/UI/Breadcrumbs.js","components/singleContract/ContractHeader.js","components/singleContract/ClientDetails.js","components/singleContract/ContractDetails.js","components/UI/LightboxImage.js","components/singleContract/ContractAttachments.js","components/plugins/Plugins.js","pages/ContractSingle.js","components/events/EventList.js","components/events/EventForm.js","components/events/EventModal.js","pages/Events.js","components/singleEvent/EventHeader.js","components/singleEvent/EventClientDetails.js","components/singleEvent/EventDetails.js","components/singleEvent/Attachments.js","pages/EventSingle.js","components/UI/NotificationButton.js","components/MainNavigation.js","components/TopBar.js","components/UI/ToastMsg.js","components/Layout.js","App.js","reducers/contractsSlice.js","reducers/eventsSlice.js","reducers/uploadsSlice.js","reducers/pluginsSlice.js","reducers/notificationsSlice.js","reducers/filtersSlice.js","store/reducers.js","store/store.js","actions/plugins.js","serviceWorker.js","index.js"],"names":["module","exports","uiReducer","createSlice","name","initialState","modalIsVisible","notification","reducers","toggleNewItem","state","actions","ContractButton","props","onClick","onOpenModal","className","text","EventButton","Header","title","getFormattedDate","val","Object","prototype","toString","call","getMonth","getDate","getFullYear","getFormattedPrice","price","toFixed","formatPhoneNumber","value","phoneNumber","replace","phoneNumberLength","length","slice","checkIfEmpty","data","removeItemHandler","id","RenewalItem","item","date","dateObj","Date","currentTimestamp","now","timeToRenewal","minutes","hours","days","months","getTimeToRenewal","toLocaleString","weekday","year","month","day","to","NoContractsFound","UpcomingRenewals","contracts","sortedDates","filter","e","endDate","sort","a","b","size","icon","faBell","map","index","StatBox","color","figure","lastUpdated","connect","contractState","dispatchData","dispatch","total","console","log","active","status","draft","expired","getActiveUpdate","Math","max","updatedAt","getDraftUpdate","getExpiredUpdate","getLastUpdated","lastActiveUpdate","lastDraftUpdate","lastExpiredUpdate","faGrinStars","faGrin","faGrinBeamSweat","faFrown","EventItem","newDate","eventDay","getDay","eventMonth","getMonthNames","slug","event","company","NoEventsFound","UpcomingEvents","events","SwiperCore","use","Scrollbar","EffectCoverflow","faCalendar","modules","spaceBetween","slidesPerView","scrollbar","draggable","onSlideChange","onSwiper","swiper","eventState","Selectbox","filterName","options","onChange","classes","o","createOptions","Filter","dropdownChangeHandler","target","onChangeStatusFilter","onChangeDateFilter","filterItems","menuId","selected","filters","this","Component","Search","searchIcon","faSearch","type","placeholder","searchValue","onChangeSearchFilter","STATUS_FILTERS","DATE_FILTERS","FiltersToolbar","selectedStatus","selectedDate","hand","LoadingSpinner","spinner","TableDropdown","faEllipsisH","role","postType","faEye","onRemove","faTrashAlt","UPDATE_FILTER","axios","create","baseURL","GET_CONTRACTS","ADD_CONTRACT","LOAD_TABLE","EDIT_CONTRACT","FETCH_CONTRACT","REMOVE_CONTRACT","ADD_EVENT","REMOVE_EVENT","EDIT_EVENT","FETCH_EVENT","GET_EVENTS","LOAD_EVENTS_TABLE","ADD_NOTIFICATION","REMOVE_NOTIFICATION","GET_NOTIFICATIONS","LOAD_NOTIFICATION_TABLE","ADD_UPLOAD","REMOVE_UPLOAD","EDIT_UPLOAD","GET_UPLOADS","LOAD_UPLOADS_TABLE","ADD_PLUGIN","_addEvent","client","isSingleDay","startDate","startTime","endTime","eventItems","notes","lastYearsPrice","upload","addEvent","eventData","post","then","result","_removeEvent","removeEvent","delete","res","editEvent","updates","put","_editEvent","getEvents","callback","getState","get","response","forEach","push","loading","isLoading","_getEvents","catch","error","request","message","Checkbox","isChecked","toggleCheckboxChange","handleCheckboxChange","label","setState","checked","TableRow","toggleCheckbox","selectedCheckboxes","has","add","createCheckbox","createCheckboxes","statusVariant","Set","_addContract","contract","email","phone","address","city","zipcode","addContract","contractData","_removeContract","removeContract","editContract","_editContract","removeContractHandler","descendingComparator","orderBy","getComparator","order","tableSort","array","comparator","stabilizedThis","el","EventsTable","useState","Array","fill","isSelected","setIsSelected","c","i","EventsTableRow","position","updatedToggledState","toggleDropdown","ContractList","filteredStatus","setFilteredStatus","filteredDate","setFilteredDate","query","setQuery","searchParam","setOrder","setOrderBy","statusFilterChangeHandler","dateFilterChangeHandler","filteredContracts","some","param","searchItem","toLowerCase","indexOf","onRequestSort","property","UploadThumb","setLoading","thumb","setThumb","file","loadThumb","nextProps","reader","FileReader","onloadstart","onloadend","readAsDataURL","useEffect","src","alt","height","width","TextInput","useField","field","meta","htmlFor","touched","TextareaInput","SelectField","EmailField","helpers","setValue","PhoneField","onKeyDown","formattedPhoneNumber","handleInput","maxLength","PriceField","DateField","useFormikContext","setFieldValue","d","dDate","join","formattedDate","handleChange","placeholderText","UploadInput","undefined","setSelected","files","faUpload","ContractForm","isEntering","setIsEntering","isDraft","setIsDraft","useParams","isNewContract","filename","initialValues","setInitialValues","validationSchema","yup","shape","matches","min","formFocusedHandler","onDraftClick","when","location","enableReinitialize","onSubmit","fields","setStatus","setSubmitting","onSaveContractData","onDraftContractData","onUpdateContractData","formik","onFocus","handleSubmit","encType","required","onCancel","disabled","isSubmitting","httpReducer","action","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","sendRequest","useCallback","requestData","path","formData","FormData","config","headers","onUploadProgress","progressEvent","loaded","_addUpload","addUpload","uploadData","append","getUploads","uploads","_getUploads","_addNotification","url","itemTitle","addNotification","notificationData","getNotifications","notifications","_getNotifications","ContractModal","require","v4","loadingStatus","useHistory","isOpen","savedData","onHideModal","draftedData","setIsOpen","items","openFormModal","onShowModal","Breadcrumbs","children","BreadcrumbItem","ContractHeader","ClientDetails","faPhone","faEnvelope","ContractDetails","LightboxImage","href","attachment","mainSrc","onCloseRequest","ContractAttachments","faBook","Plugins","amount","orderDate","expireDate","plugin","activeLink","setActiveLink","find","link","smooth","handleHashClick","EventList","filteredEvents","EventForm","isNewItem","resetForm","onDraftItem","onSaveItem","mounted","setTimeout","EventModal","saveItemHandler","updateItemHandler","onUpdateItem","EventHeader","EventClientDetails","EventDetails","Attachments","activeClassName","NotificationButton","onShowToast","MainNavigation","onShowNotification","TopBar","onHideNotification","ToastMsg","msg","createdAt","getCreatedAt","setNotificationIsShown","toast","autoClose","hideProgressBar","closeOnClick","pauseOnHover","progress","newestOnTop","rtl","limit","containerId","configure","App","exact","component","NotFound","contractObj","eventObj","uploadObj","plugins","notificationObj","combineReducers","payload","ui","configureStore","preloadedState","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","_getPlugins","subscribe","persist","window","localStorage","setItem","JSON","stringify","Boolean","hostname","match","Root","_getContracts","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d28a64a8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2Kyqv\"};","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst uiReducer = createSlice({\n  name: \"ui\",\n  initialState: { modalIsVisible: false, notification: null },\n  reducers: {\n    toggleNewItem(state) {\n      state.modalIsVisible = !state.modalIsVisible;\n    },\n  },\n});\n\nexport const uiActions = uiReducer.actions;\n\nexport default uiReducer.reducer;\n","import { useDispatch } from \"react-redux\";\nimport { uiActions } from \"../../reducers/uiSlice\";\n\nconst ContractButton = (props) => {\n  return (\n    <button onClick={props.onOpenModal} className=\"button btn has-shadow is-success is-medium\">\n      {props.text}\n    </button>\n  );\n};\n\nexport default ContractButton;","import { useDispatch } from \"react-redux\";\nimport { uiActions } from \"../../reducers/uiSlice\";\n\nconst EventButton = (props) => {\n  return (\n    <button onClick={props.onOpenModal} className=\"button btn has-shadow is-success is-medium\">\n      {props.text}\n    </button>\n  );\n};\n\nexport default EventButton;\n","import ContractButton from \"./contracts/ContractButton\";\nimport EventButton from \"./events/EventButton\";\n\nconst Header = (props) => {\n  const getTemplate = (title) => {\n    if (title === \"Contracts\") {\n      return (\n        <ContractButton text=\"New Contract\" onOpenModal={props.onOpenModal} />\n      );\n    } else if (title === \"Events\") {\n      return <EventButton text=\"New Event\" onOpenModal={props.onOpenModal} />;\n    }\n    return;\n  };\n\n  return (\n    <header className=\"page-header\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <h1 className=\"is-size-2\">{props.title}</h1>\n          {getTemplate(props.title)}\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","export const getFormattedDate = (val) => {\n  // Converts date object to string\n  if (Object.prototype.toString.call(val) === \"[object Date]\") {\n    return `${val.getMonth() + 1}/${val.getDate()}/${val.getFullYear()}`;\n  }\n\n  return val;\n};\n\nexport const getLongFormattedDate = (val) => {\n  let options = {\n    weekday: \"long\",\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n  };\n\n  // Converts date object to string\n  if (Object.prototype.toString.call(val) === \"[object Date]\") {\n    return val.toLocaleString(\"en-US\", options);\n  }\n\n  return val;\n};\n\nexport const getMonthNames = (date) => {\n  const monthNames = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  return monthNames[date.getMonth()];\n};\n\nexport const getFormattedPrice = (price) => {\n  if (!price) return price;\n\n  return `$${price.toFixed(2)}`;\n};\n\nexport const formatPrice = (x, currency) => {\n  switch (currency) {\n    case \"USD\":\n      return x.toFixed(2).replace(\".\", \",\");\n    default:\n      return x.toFixed(2);\n  }\n};\n\nexport const formatPhoneNumber = (value) => {\n  if (!value) return value;\n\n  const phoneRegex =\n    /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n\n  const phoneNumber = value.toString().replace(/[^\\d]/g, \"\");\n\n  const phoneNumberLength = phoneNumber.length;\n\n  if (phoneNumberLength < 4) return phoneNumber;\n\n  if (phoneNumberLength < 7) {\n    return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3)}`;\n  }\n\n  return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(\n    3,\n    6\n  )}-${phoneNumber.slice(6, 10)}`;\n};\n\nexport const getFormattedPhone = (phone) => {\n  const formattedInputValue = formatPhoneNumber(phone);\n};\n\nexport const checkIfEmpty = (data) => {\n  if (data) {\n    return data;\n  }\n\n  return data ? data : \"Nothing found\";\n};\n\nexport const getCreatedAt = (date) => {\n  let currentTimestamp = Date.now();\n  const minutes = (date - currentTimestamp) / 60000;\n  const hours = minutes / 60;\n  const days = hours / 24;\n  const months = days / 12;\n\n  if (minutes >= 60 && minutes < 1440) {\n    return `${hours.toFixed(0)} hrs`;\n  } else if (minutes >= 1440 && minutes < 43800) {\n    return `${days.toFixed(0)} days`;\n  } else if (minutes >= 43800) {\n    return `${months.toFixed(0)} months`;\n  } else {\n    return \"Just Now\";\n  }\n};\n\nconst removeItemHandler = (id) => {};\n\nexport default removeItemHandler;\n","import { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { getFormattedDate, getLongFormattedDate } from \"../../utils/utils\";\n\nconst RenewalItem = (props) => {\n  const date = props.date;\n  const dateObj = new Date(date);\n  const currentTimestamp = Date.now();\n\n  const getTimeToRenewal = (date) => {\n    const minutes = (date - currentTimestamp) / 60000;\n    const hours = minutes / 60;\n    const days = hours / 24;\n    const months = days / 12;\n\n    if (minutes >= 60 && minutes < 1440) {\n      return `${hours.toFixed(0)} hrs`;\n    } else if (minutes >= 1440 && minutes < 43800) {\n      return `${days.toFixed(0)} days`;\n    } else if (minutes >= 43800) {\n      return `${months.toFixed(0)} months`;\n    } else {\n      return \"Past Due\";\n    }\n  };\n\n  const timeToRenewal = getTimeToRenewal(dateObj);\n\n  const setBadge = (item) => {\n    if (item === \"Past Due\") {\n      return <span className=\"badge badge-is-danger\">{item}</span>;\n    }\n\n    return <span className=\"badge badge-is-warning\">{item}</span>;\n  };\n\n  return (\n    <Fragment>\n      <div>\n        {setBadge(timeToRenewal)}\n        <span className=\"renewal-date\">{getLongFormattedDate(dateObj)}</span>\n      </div>\n      <Link to={`/contracts/${props.id}`}>\n        <span className=\"badge badge-is-success\">view</span>\n      </Link>\n    </Fragment>\n  );\n};\n\nexport default RenewalItem;\n","import { Link } from \"react-router-dom\";\n\nconst NoContractsFound = () => {\n  return (\n    <div className=\"noContracts\">\n      <h4>No contracts found!</h4>\n      <div>\n        <Link\n          className=\"button btn has-shadow is-success is-small\"\n          to=\"/contracts\"\n        >\n          Add a Contract\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default NoContractsFound;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBell } from \"@fortawesome/free-solid-svg-icons\";\nimport RenewalItem from \"./RenewalItem\";\nimport NoContractsFound from \"../contracts/NoContractsFound\";\n\nconst UpcomingRenewals = (props) => {\n  let contracts = props.contracts;\n\n  let renewalDates = [];\n\n  const sortByDate = (arr) => {\n    const sorter = (a, b) => {\n      return new Date(a.date).getTime() - new Date(b.date).getTime();\n    };\n    arr.sort(sorter);\n  };\n\n  let sortedDates = contracts.filter(function (e) {\n    return e.endDate;\n  });\n\n  // if (!contracts || contracts.length === 0) {\n  //   return <NoContractsFound />;\n  // }\n\n  sortedDates = sortedDates.sort((a, b) => b - a);\n\n  //   sortedDates.map((date) => {\n  //     return renewalDates.push(date.endDate);\n  //   });\n\n  return (\n    <div className=\"card upcoming-renewals\">\n      <div className=\"card-header\">\n        <h5>Upcoming Renewals</h5>\n        <span className=\"icon-text is-align-items-center\">\n          <span className=\"icon\">\n            <FontAwesomeIcon size=\"lg\" icon={faBell} />\n          </span>\n        </span>\n      </div>\n      <div className=\"card-content\">\n        {!contracts || contracts.length === 0 ? (\n          <NoContractsFound />\n        ) : (\n          <aside className=\"menu\">\n            <ul className=\"menu-list\">\n              {sortedDates.map((date, index) => {\n                return (\n                  <li key={index}>\n                    <RenewalItem\n                      index={index}\n                      date={date.endDate}\n                      id={date.id}\n                    />\n                  </li>\n                );\n              })}\n            </ul>\n          </aside>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default UpcomingRenewals;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst StatBox = (props) => {\n  return (\n    <div className=\"card statbox\">\n      <div className=\"card-header\">\n        <span className=\"icon-text\">\n          <span className=\"icon\">\n            <FontAwesomeIcon size=\"4x\" color={props.color} icon={props.icon} />\n          </span>\n        </span>\n        <div>\n          <p className=\"light-text\">{props.title}</p>\n          <span className=\"card-header-title\">{props.figure}</span>\n        </div>\n      </div>\n      <div className=\"card-footer\">\n        <span className=\"card-footer-item\">\n          <span className=\"light-text\">\n            {`Last updated: ${props.lastUpdated}`}\n          </span>\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default StatBox;\n","import { connect } from \"react-redux\";\n\nimport StatBox from \"./StatBox\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faGrinStars,\n  faFrown,\n  faGrin,\n  faGrinBeamSweat,\n} from \"@fortawesome/free-regular-svg-icons\";\nimport { faExclamationTriangle } from \"@fortawesome/free-solid-svg-icons\";\n\nconst StatBoxes = (props) => {\n  const colorSuccess = \"#48c78e\";\n  const colorInfo = \"#3e8ed0\";\n  const colorWarning = \"#d6b457\";\n  const colorDanger = \"#dd3333\";\n\n  let contracts = props.contracts;\n  let total = contracts.length;\n\n  console.log('Contracts in statboxes are: ', contracts);\n\n  let active = contracts.filter(function (e) {\n    return e.status === \"Active\";\n  });\n  let draft = contracts.filter(function (e) {\n    return e.status === \"Draft\";\n  });\n  let expired = contracts.filter(function (e) {\n    return e.status === \"Expired\";\n  });\n\n  const currentTimestamp = Date.now();\n\n  const getActiveUpdate = new Date(\n    Math.max(...active.map((e) => new Date(e.updatedAt)))\n  );\n  const getDraftUpdate = new Date(\n    Math.max(...draft.map((e) => new Date(e.updatedAt)))\n  );\n  const getExpiredUpdate = new Date(\n    Math.max(...expired.map((e) => new Date(e.updatedAt)))\n  );\n\n  const updatedAt = new Date(\n    Math.max(...contracts.map((e) => new Date(e.updatedAt)))\n  );\n\n  // const getLastUpdated = (lastUpdated) => {\n  //   return ((currentTimestamp - lastUpdated) / 60000).toFixed(0);\n  // };\n\n  const getLastUpdated = (lastUpdated) => {\n    const minutes = (currentTimestamp - lastUpdated) / 60000;\n    const hours = minutes / 60;\n    const days = hours / 24;\n    const months = days / 12;\n\n    if (minutes >= 60 && minutes < 1440) {\n      return `${hours.toFixed(0)} hrs ago`;\n    } else if (minutes >= 1440 && minutes < 43800) {\n      return `${days.toFixed(0)} days ago`;\n    } else if (minutes >= 43800) {\n      return `${months.toFixed(0)} months ago`;\n    } else {\n      return \"No Updates!\";\n    }\n  };\n\n  const lastActiveUpdate = getLastUpdated(getActiveUpdate);\n  const lastDraftUpdate = getLastUpdated(getDraftUpdate);\n  const lastExpiredUpdate = getLastUpdated(getExpiredUpdate);\n\n  let lastUpdated = getLastUpdated(updatedAt);\n\n  return (\n    <div className=\"columns\">\n      <div className=\"column\">\n        <div className=\"block\">\n          <StatBox\n            icon={faGrinStars}\n            color={colorInfo}\n            title=\"Total Contracts\"\n            figure={total}\n            lastUpdated={lastUpdated}\n          />\n        </div>\n      </div>\n      <div className=\"column\">\n        <div className=\"block\">\n          <StatBox\n            icon={faGrin}\n            color={colorSuccess}\n            title=\"Active Contracts\"\n            figure={active.length}\n            lastUpdated={lastActiveUpdate}\n          />\n        </div>\n      </div>\n      <div className=\"column\">\n        <div className=\"block\">\n          <StatBox\n            icon={faGrinBeamSweat}\n            color={colorWarning}\n            title=\"Draft Contracts\"\n            figure={draft.length}\n            lastUpdated={lastDraftUpdate}\n          />\n        </div>\n      </div>\n      <div className=\"column\">\n        <div className=\"block\">\n          <StatBox\n            icon={faFrown}\n            color={colorDanger}\n            title=\"Expired Contracts\"\n            figure={expired.length}\n            lastUpdated={lastExpiredUpdate}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    contractState: state.contracts,\n    dispatchData: state.dispatch,\n  };\n};\n\nexport default connect(mapStateToProps)(StatBoxes);\n","import { Fragment } from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nimport {\n  checkIfEmpty,\n  getLongFormattedDate,\n  getMonthNames,\n} from \"../../utils/utils\";\n\nconst EventItem = (props) => {\n  const date = props.date;\n\n  const newDate = new Date(date);\n\n  const eventDay = newDate.getDay();\n  const eventMonth = getMonthNames(newDate);\n\n  return (\n    <Fragment>\n      <div className=\"block\">\n        {eventDay ? (\n          <span className=\"upcoming-events__day\">{eventDay}</span>\n        ) : (\n          <span className=\"upcoming-events__unavailable\">Date unavailable</span>\n        )}\n\n        <span>{eventMonth}</span>\n      </div>\n      <div className=\"block\">\n        <Link to={`/events/${props.slug}`}>\n          <h6 className=\"upcoming-events__title\">{props.event}</h6>\n        </Link>\n      </div>\n      <div className=\"block upcoming-events__meta\">\n        <p>7:30 - 8:30</p>\n        <span>{props.company}</span>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default EventItem;\n","import { Link } from \"react-router-dom\";\n\nconst NoEventsFound = () => {\n  return (\n    <div className=\"noEvents\">\n      <h4>No events found!</h4>\n      <div>\n        <Link\n          className=\"button btn has-shadow is-success is-small\"\n          to=\"/events\"\n        >\n          Add an Event\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default NoEventsFound;\n","import EventItem from \"./EventItem\";\nimport NoEventsFound from \"./NoEventsFound\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCalendar } from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"swiper/swiper.scss\";\nimport \"swiper/components/scrollbar/scrollbar.scss\";\n// import 'swiper/css/grid';\n\nimport SwiperCore, { Scrollbar, EffectCoverflow } from \"swiper\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\n\nconst UpcomingEvents = (props) => {\n  let events = props.events;\n\n  SwiperCore.use([Scrollbar, EffectCoverflow]);\n\n  return (\n    <div className=\"card upcoming-events\">\n      <div className=\"card-header\">\n        <h5>Upcoming Events</h5>\n        <span className=\"icon-text is-align-items-center\">\n          <span className=\"icon\">\n            <FontAwesomeIcon size=\"lg\" icon={faCalendar} />\n          </span>\n        </span>\n      </div>\n      <div className=\"card-content\">\n        {!events.length ? (\n          <NoEventsFound />\n        ) : (\n          <div className=\"upcoming-events\">\n            <Swiper\n              modules={[Scrollbar, EffectCoverflow]}\n              spaceBetween={5}\n              slidesPerView={3}\n              scrollbar={{ draggable: true }}\n              onSlideChange={() => console.log(\"slide change\")}\n              onSwiper={(swiper) => console.log(swiper)}\n            >\n              {events.map((date, index) => {\n                return (\n                  <SwiperSlide key={index}>\n                    <EventItem\n                      id={date.id}\n                      event=\"An upcoming event\"\n                      date={date.endDate}\n                      company=\"Some Company\"\n                    />\n                  </SwiperSlide>\n                );\n              })}\n            </Swiper>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default UpcomingEvents;\n","import { connect } from \"react-redux\";\nimport Header from \"../components/Header\";\n\nimport UpcomingRenewals from \"../components/dashboard/UpcomingRenewals\";\nimport StatBoxes from \"../components/dashboard/StatBoxes\";\nimport UpcomingEvents from \"../components/events/UpcomingEvents\";\n\nconst Dashboard = (props) => {\n\n  let contracts = props.contractState;\n  let events = props.eventState;\n\n  return (\n    <div>\n      <Header title=\"Dashboard\" />\n      {/* <section className=\"section\">\n        <Route path=\"/dashboard/new-user\">\n          <p>Welcome, new user!</p>\n        </Route>\n      </section> */}\n      <section className=\"section\">\n        <div className=\"container-fluid\">\n          <StatBoxes contracts={contracts} />\n        </div>\n        <div className=\"container-fluid\">\n          <div className=\"columns\">\n            <div className=\"column is-one-third\">\n              <UpcomingRenewals contracts={contracts} />\n            </div>\n            <div className=\"column is-one-third\">\n              <UpcomingEvents events={events} />\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    contractState: state.contracts,\n    eventState: state.events,\n    dispatchData: state.dispatch,\n  };\n};\n\nexport default connect(mapStateToProps)(Dashboard);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Selectbox = ({ id, value, filterName, options, classes, onChange }) => {\n  const createOptions = (options) =>\n    options.map((o) => (\n      <option value={o.value} key={o.value}>\n        {`${filterName}: ${o.name}`}\n      </option>\n    ));\n\n  return (\n    <select id={id} value={value} onChange={onChange}>\n      {createOptions(options)}\n    </select>\n  );\n};\n\n// Selectbox.propTypes = {\n//   options: PropTypes.array.isRequired,\n//   classes: PropTypes.string,\n//   handleOnChange: PropTypes.func.isRequired,\n// };\n\nexport default Selectbox;\n","import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Selectbox from \"./Selectbox\";\n\nclass Filter extends Component {\n  // static propTypes = {\n  //   updateFilters: PropTypes.func.isRequired,\n  //   filters: PropTypes.array,\n  // };\n\n  dropdownChangeHandler = (event) => {\n\n    if (event.target.id === \"status-menu\") {\n      this.props.onChangeStatusFilter(event.target.value);\n    }\n\n    if (event.target.id === \"date-menu\") {\n      this.props.onChangeDateFilter(event.target.value);\n    }\n\n    return 'cannot find option';\n  };\n\n  filterItems = (\n    <Fragment>\n      {/* <select\n        id={this.props.menuId}\n        value={this.props.selected}\n        onChange={this.dropdownChangeHandler}\n      >\n        {this.props.filters.map((filterItem, i) => (\n          <option key={i} value={filterItem.value}>\n            {`${this.props.filterName}: ${filterItem.name}`}\n          </option>\n        ))}\n      </select> */}\n      <Selectbox\n        id={this.props.menuId}\n        filterName={this.props.filterName}\n        value={this.props.selected}\n        onChange={this.dropdownChangeHandler}\n        options={this.props.filters}\n      />\n    </Fragment>\n  );\n\n  render() {\n    return <div className=\"select is-medium mr-3\">{this.filterItems}</div>;\n  }\n}\n\nexport default Filter;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Search = (props) => {\n  const searchIcon = <FontAwesomeIcon icon={faSearch} />;\n\n  const searchChangeHandler = (event) => {\n    props.onChangeSearchFilter(event.target.value);\n  };\n\n  return (\n    <p className=\"control has-icons-right\">\n      <input\n        className=\"input is-medium\"\n        type=\"text\"\n        placeholder=\"Search contracts...\"\n        value={props.searchValue}\n        onChange={searchChangeHandler}\n      />\n      <span className=\"icon is-small is-right\">{searchIcon}</span>\n    </p>\n  );\n};\n\nexport default Search;\n","import { useState } from \"react\";\n\nimport Filter from \"./Filter\";\nimport Search from \"./Search\";\n\nconst STATUS_FILTERS = [\n  { value: \"all\", name: \"All\" },\n  { value: \"active\", name: \"Active\" },\n  { value: \"draft\", name: \"Draft\" },\n  { value: \"expired\", name: \"Expired\" },\n];\n\nconst DATE_FILTERS = [\n  { value: \"all\", name: \"All\" },\n  { value: \"2022\", name: \"2022\" },\n  { value: \"2021\", name: \"2021\" },\n  { value: \"2020\", name: \"2020\" },\n  { value: \"2019\", name: \"2019\" },\n  { value: \"2018\", name: \"2018\" },\n];\n\nconst FiltersToolbar = (props) => {\n\n  return (\n    <div className=\"filters-toolbar mb-4\">\n      <div className=\"flex space-between\">\n        <div className=\"field is-grouped\">\n          <Filter\n            filterName={\"Status\"}\n            filters={STATUS_FILTERS}\n            menuId={\"status-menu\"}\n            onChangeStatusFilter={props.onChangeStatusFilter}\n            selected={props.selectedStatus}\n          />\n          <Filter\n            filterName={\"Date\"}\n            filters={DATE_FILTERS}\n            menuId={\"date-menu\"}\n            onChangeDateFilter={props.onChangeDateFilter}\n            selected={props.selectedDate}\n            hand\n          />\n          <Search searchValue={props.searchValue} onChangeSearchFilter={props.onChangeSearchFilter} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FiltersToolbar;\n","import classes from \"./LoadingSpinner.module.css\";\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n};\n\nexport default LoadingSpinner;\n","import { Link } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faEllipsisH,\n  faEye,\n  faEdit,\n  faTrashAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst TableDropdown = (props) => {\n  return (\n    <div className={`dropdown ${props.selected ? \"is-active\" : \"\"} `}>\n      <div className=\"dropdown-trigger\">\n        <button\n          className=\"button\"\n          aria-haspopup=\"true\"\n          aria-controls=\"dropdown-menu\"\n          onClick={props.onClick}\n        >\n          <span className=\"icon is-small\">\n            <FontAwesomeIcon icon={faEllipsisH} className=\"icon-dark\" />\n          </span>\n        </button>\n      </div>\n      <div\n        className=\"dropdown-menu\"\n        id={`actions-menu-${props.id}`}\n        role=\"menu\"\n      >\n        <div className=\"dropdown-content\">\n          <Link\n            className=\"dropdown-item\"\n            to={`/${props.postType}/${props.slug}`}\n          >\n            <span className=\"icon-text\">\n              <span className=\"icon\">\n                <FontAwesomeIcon icon={faEye} />\n              </span>\n              <span>View Details</span>\n            </span>\n          </Link>\n          <button\n            className=\"dropdown-item\"\n            onClick={(e) => {\n              const id = props.id;\n\n              //props.dispatchData(removeContract({ id }));\n              props.onRemove(id);\n            }}\n          >\n            <span className=\"icon-text has-text-danger\">\n              <span className=\"icon\">\n                <FontAwesomeIcon icon={faTrashAlt} />\n              </span>\n              <span>Remove</span>\n            </span>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TableDropdown;\n","export const UPDATE_FILTER = 'UPDATE_FILTER';","import axios from \"axios\";\n\nexport default axios.create({\n  //baseURL: \"http://localhost:3306/api\",\n  baseURL: \"http://cms.danfreedesign.com:3306/api\",\n});","export const GET_CONTRACTS = \"GET_CONTRACTS\";\nexport const RECEIVE_CONTRACTS = \"RECEIVE_CONTRACTS\";\nexport const REQUEST_CONTRACTS = \"REQUEST_CONTRACTS\";\nexport const CONTRACT_REQUEST = \"CONTRACT_REQUEST\";\nexport const CONTRACT_SUCCESS = \"CONTRACT_SUCCESS\";\nexport const CONTRACT_FAILURE = \"CONTRACT_FAILURE\";\nexport const ADD_CONTRACT = \"ADD_CONTRACT\";\nexport const LOAD_TABLE = \"LOAD_TABLE\";\nexport const TOGGLE_MODAL = \"TOGGLE_MODAL\";\nexport const EDIT_CONTRACT = \"EDIT_CONTRACT\";\nexport const FETCH_CONTRACT = \"FETCH_CONTRACT\";\nexport const REMOVE_CONTRACT = \"REMOVE_CONTRACT\";\n\nexport const ADD_EVENT = \"ADD_EVENT\";\nexport const REMOVE_EVENT = \"REMOVE_EVENT\";\nexport const EDIT_EVENT = \"EDIT_EVENT\";\nexport const FETCH_EVENT = \"FETCH_EVENT\";\nexport const GET_EVENTS = \"GET_EVENTS\";\nexport const RECEIVE_EVENTS = \"RECEIVE_EVENTS\";\nexport const REQUEST_EVENTS = \"REQUEST_EVENTS\";\nexport const EVENT_REQUEST = \"EVENT_REQUEST\";\nexport const EVENT_SUCCESS = \"EVENT_SUCCESS\";\nexport const EVENT_FAILURE = \"EVENT_FAILURE\";\nexport const LOAD_EVENTS_TABLE = \"LOAD_EVENTS_TABLE\";\n\nexport const COMBINE_ACTIONS = \"COMBINE_ACTIONS\";\n\nexport const ADD_NOTIFICATION = \"ADD_NOTIFICATION\";\nexport const REMOVE_NOTIFICATION = \"REMOVE_NOTIFICATION\";\nexport const GET_NOTIFICATIONS = \"GET_NOTIFICATIONS\";\nexport const SHOW_NOTIFICATION = \"SHOW_NOTIFICATION\";\nexport const LOAD_NOTIFICATION_TABLE = \"LOAD_NOTIFICATION_TABLE\";\n\nexport const ADD_UPLOAD = \"ADD_UPLOAD\";\nexport const REMOVE_UPLOAD = \"REMOVE_UPLOAD\";\nexport const EDIT_UPLOAD = \"EDIT_UPLOAD\";\nexport const GET_UPLOADS = \"GET_UPLOADS\";\nexport const SHOW_UPLOAD = \"SHOW_UPLOAD\";\nexport const LOAD_UPLOADS_TABLE = \"LOAD_UPLOADS_TABLE\";\n\nexport const ADD_PLUGIN = \"ADD_PLUGIN\";\nexport const REMOVE_PLUGIN = \"REMOVE_PLUGIN\";\nexport const EDIT_PLUGIN = \"EDIT_PLUGIN\";\nexport const GET_PLUGINS = \"GET_PLUGINS\";\nexport const SHOW_PLUGIN = \"SHOW_PLUGIN\";\nexport const LOAD_PLUGINS_TABLE = \"LOAD_PLUGINS_TABLE\";\n","import axios from \"../axios/axios\";\nimport {\n  ADD_EVENT,\n  GET_EVENTS,\n  REMOVE_EVENT,\n  FETCH_EVENT,\n  LOAD_EVENTS_TABLE,\n  EDIT_EVENT,\n} from \"../constants/ActionTypes\";\n\nconst _addEvent = (event) => ({\n  type: ADD_EVENT,\n  event,\n});\n\nconst initialState = {\n  slug: '',\n  event: \"\",\n  client: \"\",\n  company: \"\",\n  isSingleDay: false,\n  startDate: \"\",\n  startTime: \"\",\n  endDate: \"\",\n  endTime: \"\",\n  eventItems: '',\n  notes: \"\",\n  lastYearsPrice: \"\",\n  upload: \"\",\n  status: \"\",\n};\n\nexport const addEvent =\n  (eventData = initialState) =>\n  (dispatch) => {\n    const event = {\n      slug: eventData.slug,\n      event: eventData.event,\n      client: eventData.client,\n      company: eventData.company,\n      isSingleDay: eventData.isSingleDay,\n      startDate: eventData.startDate,\n      startTime: eventData.startTime,\n      endDate: eventData.endDate,\n      endTime: eventData.endTime,\n      lastYearsPrice: eventData.lastYearsPrice,\n      eventItems: eventData.eventItems,\n      notes: eventData.notes,\n      upload: eventData.upload,\n      status: eventData.status,\n    };\n\n    return axios.post(\"events/add\", event).then((result) => {\n      dispatch(_addEvent(result.data));\n    });\n  };\n\nconst _removeEvent = ({ id = {} }) => ({\n  type: REMOVE_EVENT,\n  id,\n});\n\nexport const removeEvent = ({ id } = {}) => {\n  return (dispatch) => {\n    return axios.delete(`events/${id}`).then((res) => {\n      dispatch(_removeEvent({ id }));\n    });\n  };\n};\n\nconst _fetchEvent = (id) => ({\n  type: FETCH_EVENT,\n  id,\n});\n\nexport const fetchEvent =\n  ({ id } = {}) =>\n  (dispatch) => {\n    return axios.get(`events/${id}`).then((res) => {\n      dispatch(_fetchEvent({ id }));\n    });\n  };\n\nconst _editEvent = (id, updates) => ({\n  type: EDIT_EVENT,\n  id,\n  updates,\n});\n\nexport const editEvent = (id, updates) => {\n  return (dispatch) => {\n    return axios.put(`events/${id}`, updates).then(() => {\n      dispatch(_editEvent(id, updates));\n    });\n  };\n};\n\nconst _getEvents = (events, loading) => ({\n  type: GET_EVENTS,\n  events,\n  isLoading: true,\n});\n\nexport const getEvents = (callback) => (dispatch, getState) => {\n  return axios\n    .get(\"events\")\n    .then((response) => {\n      const events = [];\n\n      response.data.forEach((item) => {\n        events.push(item);\n      });\n\n      dispatch(_getEvents(events));\n    })\n    .catch((error) => {\n      if (error.response) {\n        console.log(error.response.data);\n      } else if (error.request) {\n        console.log(error.request);\n      } else {\n        console.log(\"Error\", error.message);\n      }\n    });\n};\n\nexport const loadEventsTable = (events) => ({\n  type: LOAD_EVENTS_TABLE,\n  payload: events,\n});\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"bulma/css/bulma.min.css\";\n\nclass Checkbox extends Component {\n  static propTypes = {\n    label: PropTypes.string,\n    handleCheckboxChange: PropTypes.func.isRequired,\n  };\n\n  state = {\n    isChecked: false,\n  };\n\n  toggleCheckboxChange = () => {\n    const { handleCheckboxChange, label } = this.props;\n\n    this.setState(({ isChecked }) => ({\n      isChecked: !isChecked,\n    }));\n\n    handleCheckboxChange(label);\n  };\n\n  render() {\n    const { label } = this.props;\n    const { isChecked } = this.state;\n\n    return (\n      <label className={this.props.classes}>\n        <input\n          type=\"checkbox\"\n          className=\"checkbox--medium\"\n          value={label}\n          checked={isChecked}\n          onChange={this.toggleCheckboxChange}\n        />\n        <span className=\"checkmark\">{label}</span>\n      </label>\n    );\n  }\n}\n\nexport default Checkbox;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport TableDropdown from \"./TableDropdown\";\n\nimport { updateFilters } from \"../../filters/actions\";\nimport { removeEvent } from \"../../actions/events\";\nimport Checkbox from \"./Checkbox\";\n\nimport removeItemHandler, {\n  getFormattedPrice,\n  getFormattedDate,\n} from \"../../utils/utils\";\n\nclass TableRow extends Component {\n  //const { id, startDate, endDate, contract, client, price, status } = props;\n\n  componentDidMount() {\n    this.selectedCheckboxes = new Set();\n  }\n\n  toggleCheckbox = (label) => {\n    if (this.selectedCheckboxes.has(label)) {\n      this.selectedCheckboxes.delete(label);\n    } else {\n      this.selectedCheckboxes.add(label);\n    }\n  };\n\n  createCheckbox = (label) => (\n    <Checkbox\n      classes=\"checkbox checkbox--medium\"\n      label={label}\n      handleCheckboxChange={this.toggleCheckbox}\n      key={label}\n    />\n  );\n\n  createCheckboxes = () => this.createCheckbox();\n\n  statusVariant =\n    this.props.status === \"Active\"\n      ? \"has-text-success-dark\"\n      : this.props.status === \"Draft\"\n      ? \"has-text-warning-dark\"\n      : this.props.status === \"Expired\"\n      ? \"has-text-danger-dark\"\n      : \"primary\";\n\n  removeItemHandler = (id) => {\n    //await new Promise((r) => setTimeout(r, 2000));\n\n    // post contract data\n    this.props.dispatchData(removeEvent({ id }));\n  };\n\n  render() {\n    return (\n      <tr id={`table-row-${this.props.id}`}>\n        <td className=\"is-flex is-justify-content-center is-align-content-center\">\n          {this.createCheckboxes(\"checkbox\")}\n        </td>\n        <td>{this.props.event}</td>\n        <td>{this.props.company}</td>\n        <td>\n          {!this.props.startDate ? \"\" : getFormattedDate(this.props.startDate)}\n        </td>\n        <td>\n          {!this.props.endDate ? \"\" : getFormattedDate(this.props.endDate)}\n        </td>\n        <td>{!this.props.lastYearsPrice ? \"\" : getFormattedPrice(this.props.lastYearsPrice)}</td>\n        <td>\n          <span className={this.statusVariant}>{this.props.status}</span>\n        </td>\n        <td>\n          <TableDropdown\n            id={this.props.id}\n            slug={this.props.slug}\n            postType='events'\n            selected={this.props.selected}\n            onRemove={removeItemHandler}\n            onClick={this.props.onClick}\n          />\n        </td>\n      </tr>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  filters: state.filters.items,\n});\n\nexport default TableRow;\n","import axios from \"../axios/axios\";\nimport {\n  ADD_CONTRACT,\n  GET_CONTRACTS,\n  REMOVE_CONTRACT,\n  FETCH_CONTRACT,\n  LOAD_TABLE,\n  EDIT_CONTRACT,\n} from \"../constants/ActionTypes\";\n\nconst _addContract = (contract) => ({\n  type: ADD_CONTRACT,\n  contract,\n});\n\nconst initialState = {\n  slug: \"\",\n  client: \"\",\n  company: \"\",\n  email: \"\",\n  phone: \"\",\n  address: \"\",\n  city: \"\",\n  state: \"\",\n  zipcode: \"\",\n  title: \"\",\n  startDate: \"\",\n  endDate: \"\",\n  price: 0,\n  notes: \"\",\n  upload: \"\",\n  status: \"\",\n};\n\nexport const addContract =\n  (contractData = initialState) =>\n  (dispatch) => {\n    const contract = {\n      slug: contractData.slug,\n      client: contractData.client,\n      company: contractData.company,\n      email: contractData.email,\n      phone: contractData.phone,\n      address: contractData.address,\n      city: contractData.city,\n      state: contractData.state,\n      zipcode: contractData.zipcode,\n      title: contractData.title,\n      startDate: contractData.startDate,\n      endDate: contractData.endDate,\n      price: contractData.price,\n      notes: contractData.notes,\n      upload: contractData.upload,\n      status: contractData.status,\n    };\n\n    return axios\n      .post(\"contracts/add\", contract)\n      .then((result) => {\n        dispatch(_addContract(result.data));\n      })\n      .catch((error) => {\n        if (error.response) {\n          console.log(error.response);\n        } else if (error.request) {\n          console.log(error.request);\n        } else {\n          console.log(\"Error\", error.message);\n        }\n      });\n  };\n\nconst _removeContract = ({ id = {} }) => ({\n  type: REMOVE_CONTRACT,\n  id,\n});\n\nexport const removeContract = ({ id } = {}) => {\n  return (dispatch) => {\n    return axios.delete(`contracts/${id}`).then((res) => {\n      dispatch(_removeContract({ id }));\n    });\n  };\n};\n\nconst _fetchContract = (id) => ({\n  type: FETCH_CONTRACT,\n  id,\n});\n\nexport const fetchContract =\n  ({ id } = {}) =>\n  (dispatch) => {\n    return axios.get(`contracts/${id}`).then((res) => {\n      dispatch(_fetchContract({ id }));\n    });\n  };\n\nconst _editContract = (id, updates) => ({\n  type: EDIT_CONTRACT,\n  id,\n  updates,\n});\n\nexport const editContract = (id, updates) => {\n  return (dispatch) => {\n    return axios.put(`contracts/${id}`, updates).then(() => {\n      dispatch(_editContract(id, updates));\n    });\n  };\n};\n\nconst _getContracts = (contracts, loading) => ({\n  type: GET_CONTRACTS,\n  contracts,\n  isLoading: true,\n});\n\nexport const getContracts = (callback) => (dispatch, getState) => {\n  return axios\n    .get(\"contracts\")\n    .then((response) => {\n      const contracts = [];\n\n      response.data.forEach((item) => {\n        contracts.push(item);\n      });\n\n      dispatch(_getContracts(contracts));\n    })\n    .catch((error) => {\n      if (error.response) {\n        console.log(error.response.data);\n      } else if (error.request) {\n        console.log(error.request);\n      } else {\n        console.log(\"Error\", error.message);\n      }\n    });\n};\n\nexport const loadTable = (contracts) => ({\n  type: LOAD_TABLE,\n  payload: contracts,\n});\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport TableDropdown from \"./TableDropdown\";\n\nimport { updateFilters } from \"../../filters/actions\";\nimport { removeContract } from \"../../actions/contracts\";\nimport Checkbox from \"./Checkbox\";\n\nimport removeContractHandler, {\n  getFormattedPrice,\n  getFormattedDate,\n} from \"../../utils/utils\";\n\nclass TableRow extends Component {\n  //const { id, startDate, endDate, contract, client, price, status } = props;\n\n  componentDidMount() {\n    this.selectedCheckboxes = new Set();\n  }\n\n  toggleCheckbox = (label) => {\n    if (this.selectedCheckboxes.has(label)) {\n      this.selectedCheckboxes.delete(label);\n    } else {\n      this.selectedCheckboxes.add(label);\n    }\n\n    //this.props.updateFilters(Array.from(this.selectedCheckboxes));\n  };\n\n  createCheckbox = (label) => (\n    <Checkbox\n      classes=\"checkbox checkbox--medium\"\n      label={label}\n      handleCheckboxChange={this.toggleCheckbox}\n      key={label}\n    />\n  );\n\n  createCheckboxes = () => this.createCheckbox();\n\n  statusVariant =\n    this.props.status === \"Active\"\n      ? \"has-text-success-dark\"\n      : this.props.status === \"Draft\"\n      ? \"has-text-warning-dark\"\n      : this.props.status === \"Expired\"\n      ? \"has-text-danger-dark\"\n      : \"primary\";\n\n  removeContractHandler = (id) => {\n    // post contract data\n    this.props.dispatchData(removeContract({ id }));\n  };\n\n  render() {\n    return (\n      <tr id={`table-row-${this.props.id}`}>\n        <td className=\"is-flex is-justify-content-center is-align-content-center\">\n          {this.createCheckboxes(\"checkbox\")}\n        </td>\n        <td>{this.props.client}</td>\n        <td>{this.props.company}</td>\n        <td>\n          {!this.props.startDate ? \"\" : getFormattedDate(this.props.startDate)}\n        </td>\n        <td>\n          {!this.props.endDate ? \"\" : getFormattedDate(this.props.endDate)}\n        </td>\n        <td>{!this.props.price ? \"\" : getFormattedPrice(this.props.price)}</td>\n        <td>\n          <span className={this.statusVariant}>{this.props.status}</span>\n        </td>\n        <td>\n          <TableDropdown\n            id={this.props.id}\n            slug={this.props.slug}\n            selected={this.props.selected}\n            onRemove={this.removeContractHandler}\n            onClick={this.props.onClick}\n            postType={this.props.postType}\n          />\n        </td>\n      </tr>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  filters: state.filters.items,\n});\n\nexport default TableRow;\n","import { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nimport EventsTableRow from \"./EventsTableRow\";\nimport TableRow from \"./TableRow\";\n\nconst sleep = (ms) => new Promise((r) => setTimeout(r, ms));\n\nconst descendingComparator = (a, b, orderBy) => {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n};\n\nconst getComparator = (order, orderBy) => {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n};\n\nconst tableSort = (array, comparator) => {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n};\n\nconst ContractsTable = (props) => {\n  const [isSelected, setIsSelected] = useState(\n    new Array(props.contracts.length).fill(false)\n  );\n\n  const toggleDropdown = (position) => {\n    const updatedToggledState = isSelected.map((item, index) =>\n      index === position ? !item : item\n    );\n\n    console.log(position);\n\n    setIsSelected(updatedToggledState);\n  };\n\n  return (\n    <>\n      {props.isLoading ? (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      ) : (\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th></th>\n              <th>Client</th>\n              <th>Company</th>\n              <th>Start Date</th>\n              <th>End Date</th>\n              <th>Price</th>\n              <th>Status</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {tableSort(\n              props.contracts,\n              getComparator(props.order, props.orderBy)\n            ).map((c, i) => {\n              return (\n                <TableRow\n                  key={c.id}\n                  id={c.id}\n                  slug={c.slug}\n                  {...c}\n                  selected={isSelected[i]}\n                  onClick={() => toggleDropdown(i)}\n                  dispatchData={props.dispatchData}\n                  filters={props.filters}\n                  postType={props.postType}\n                  //onRemove={props.removeContractHandler.bind(null, c.id)}\n                />\n              );\n            })}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n\nexport const EventsTable = (props) => {\n  const events = props.events;\n\n  const [isSelected, setIsSelected] = useState(\n    new Array(events.length).fill(false)\n  );\n\n  const toggleDropdown = (position) => {\n    const updatedToggledState = isSelected.map((item, index) =>\n      index === position ? !item : item\n    );\n\n    setIsSelected(updatedToggledState);\n  };\n\n  return (\n    <>\n      {props.isLoading ? (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      ) : (\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th></th>\n              <th>Event</th>\n              <th>Company</th>\n              <th>Start Date</th>\n              <th>End Date</th>\n              <th>Last Year's Price</th>\n              <th>Status</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {tableSort(events, getComparator(props.order, props.orderBy)).map(\n              (c, i) => {\n                return (\n                  <EventsTableRow\n                    key={c.id}\n                    id={c.id}\n                    slug={c.slug}\n                    {...c}\n                    selected={isSelected[i]}\n                    onClick={() => toggleDropdown(i)}\n                    dispatchData={props.dispatchData}\n                    filters={props.filters}\n                    //onRemove={props.removeContractHandler.bind(null, c.id)}\n                  />\n                );\n              }\n            )}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n\nexport default connect()(ContractsTable);\n","import { Fragment, useState } from \"react\";\n\nimport FiltersToolbar from \"../tables/FiltersToolbar\";\nimport ContractsTable from \"../tables/Table\";\n\nimport Spinner from \"../UI/LoadingSpinner\";\n\nimport \"bulma/css/bulma.min.css\";\n\nconst ContractList = (props) => {\n  const contracts = props.contracts;\n\n  const [filteredStatus, setFilteredStatus] = useState();\n  const [filteredDate, setFilteredDate] = useState();\n\n  const [query, setQuery] = useState(\"\");\n  const [searchParam] = useState([\"client\", \"title\"]);\n\n  const [order, setOrder] = useState(\"asc\");\n  const [orderBy, setOrderBy] = useState([]);\n\n  const statusFilterChangeHandler = (selectedStatus) => {\n    setFilteredStatus(selectedStatus);\n  };\n\n  const dateFilterChangeHandler = (selectedDate) => {\n    setFilteredDate(selectedDate);\n  };\n\n  const searchFilterChangeHandler = (query) => {\n    setQuery(query);\n  };\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const filteredContracts = contracts.filter((item) => {\n    if (\n      (filteredStatus === \"All\" ||\n        filteredStatus === \"draft\" ||\n        filteredStatus === \"expired\" ||\n        filteredStatus === \"active\") &&\n      filteredStatus !== null\n    ) {\n      return item.status.toLowerCase() === filteredStatus;\n    }\n\n    // If some searchParam's value matches the value of the contract\n    // Return true\n\n    if (\n      (filteredDate === \"2022\" ||\n        filteredDate === \"2021\" ||\n        filteredDate === \"2020\" ||\n        filteredDate === \"2019\" ||\n        filteredDate === \"2018\") &&\n      filteredDate !== null\n    ) {\n      return item.startDate.getFullYear().toString() === filteredDate;\n    }\n\n    return searchParam.some((param) => {\n      const searchItem = item[param];\n\n      if (searchItem === null) {\n        console.log(\"Search value is null\");\n      }\n\n      return (\n        searchItem.toString().toLowerCase().indexOf(query.toLowerCase()) > -1\n      );\n    });\n  });\n\n  if (!filteredContracts || filteredContracts.length === 0) {\n    return (\n      <Fragment>\n        <FiltersToolbar\n          selectedStatus={filteredStatus}\n          selectedDate={filteredDate}\n          onChangeStatusFilter={statusFilterChangeHandler}\n          onChangeDateFilter={dateFilterChangeHandler}\n          searchValue={query}\n        />\n        <h2>No contracts found.</h2>\n      </Fragment>\n    );\n  } else {\n    return (\n      <Fragment>\n        <FiltersToolbar\n          selectedStatus={filteredStatus}\n          selectedDate={filteredDate}\n          onChangeStatusFilter={statusFilterChangeHandler}\n          onChangeDateFilter={dateFilterChangeHandler}\n          onChangeSearchFilter={searchFilterChangeHandler}\n          order={order}\n          orderBy={orderBy}\n          onRequestSort={handleRequestSort}\n        />\n\n        {props.isLoading && <Spinner />}\n\n        <ContractsTable\n          contracts={filteredContracts}\n          order={order}\n          orderBy={orderBy}\n          dispatchData={props.dispatchData}\n          filters={props.filters}\n          postType=\"contracts\"\n        />\n      </Fragment>\n    );\n  }\n};\n\nexport default ContractList;\n","import { useEffect, useState } from \"react\";\nimport LoadingSpinner from \"./LoadingSpinner\";\n\nconst UploadThumb = (props) => {\n  const [loading, setLoading] = useState(false);\n  const [thumb, setThumb] = useState(\"\");\n\n  const file = props.file;\n\n  const loadThumb = async (nextProps) => {\n    if (!nextProps) {\n      return;\n    }\n\n    let reader = new FileReader();\n\n    reader.onloadstart = () => {\n      setLoading(true);\n    };\n\n    reader.onloadend = () => {\n      setLoading(false);\n      setThumb(reader.result);\n    };\n\n    reader.readAsDataURL(nextProps);\n  };\n\n  useEffect(() => {\n    loadThumb(file);\n  }, [file]);\n\n  if (!file) {\n    return null;\n  }\n\n  if (loading) {\n    return <LoadingSpinner />;\n  }\n\n  return (\n    <img src={thumb} alt={file.name} className=\"img\" height={150} width={150} />\n  );\n};\n\nexport default UploadThumb;\n","import { useState, Fragment } from \"react\";\nimport { useField, useFormikContext } from \"formik\";\nimport { formatPhoneNumber, getFormattedPhone } from \"../../utils/utils\";\nimport DatePicker from \"react-datepicker\";\n\nimport UploadThumb from \"../UI/UploadThumb\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUpload } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const TextInput = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n\n  return (\n    <Fragment>\n      <label htmlFor={props.id || props.name}>{label}</label>\n      <input className=\"input\" {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <span className=\"error-message\">{meta.error}</span>\n      ) : null}\n    </Fragment>\n  );\n};\n\nexport const TextareaInput = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n\n  return (\n    <Fragment>\n      <label htmlFor={props.id || props.name}>{label}</label>\n      <textarea className=\"textarea\" {...field} {...props}></textarea>\n      {meta.touched && meta.error ? (\n        <span className=\"error-message\">{meta.error}</span>\n      ) : null}\n    </Fragment>\n  );\n};\n\nexport const SelectField = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  return (\n    <div>\n      <label htmlFor={props.id || props.name}>{label}</label>\n      <div className=\"select\">\n        <select {...field} {...props} />\n      </div>\n      {meta.touched && meta.error ? (\n        <span className=\"error-message\">{meta.error}</span>\n      ) : null}\n    </div>\n  );\n};\n\nexport const EmailField = ({ label, ...props }) => {\n  const [field, meta, helpers] = useField(props.name);\n\n  const { value } = meta;\n  const { setValue } = helpers;\n\n  return (\n    <Fragment>\n      <label htmlFor={props.name}>{label}</label>\n      <input id={props.name} className=\"input\" {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <span className=\"error-message\">{meta.error}</span>\n      ) : null}\n    </Fragment>\n  );\n};\n\nexport const PhoneField = ({ label, ...props }) => {\n  const [field, meta, helpers] = useField(props.name);\n\n  const { value } = meta;\n  const { setValue } = helpers;\n\n  const handleInput = (e) => {\n    // setInputValue(prevValues => ({\n    //   ...prevValues,\n    //   [e.target.name]: e.target.value,\n    // }));\n\n    const formattedPhoneNumber = formatPhoneNumber(e.target.value);\n    setValue(formattedPhoneNumber);\n  };\n\n  return (\n    <Fragment>\n      <label htmlFor={props.name}>{label}</label>\n      <input\n        id={props.name}\n        onKeyDown={(e) => handleInput(e)}\n        className=\"input\"\n        maxLength={14}\n        {...field}\n        {...props}\n        value={value}\n      />\n      {meta.touched && meta.error ? (\n        <span className=\"error-message\">{meta.error}</span>\n      ) : null}\n    </Fragment>\n  );\n};\n\nexport const PriceField = ({ label, ...props }) => {\n  const [field, meta, helpers] = useField(props);\n\n  const { value } = meta;\n  const { setValue } = helpers;\n\n  // const handleChange = (p) => {\n  //   console.log(`P is: ${p}`);\n  //   let formattedPrice = `${p}`;\n  //   setValue(formattedPrice);\n  // };\n\n  return (\n    <Fragment>\n      <label htmlFor={props.name}>{label}</label>\n      <input className=\"input\" {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <span className=\"error-message\">{meta.error}</span>\n      ) : null}\n    </Fragment>\n  );\n};\n\nexport const DateField = ({ ...props }) => {\n  const { setFieldValue } = useFormikContext();\n  const [field, meta, helpers] = useField(props);\n\n  const { value } = meta;\n  const { setValue } = helpers;\n\n  const handleChange = (d) => {\n    // const month = e.getMonth() + 1;\n    // month = month.slice(-2);\n    // const day = e.getDate().slice(-2);\n    // const year = e.getFullYear();\n\n    let dDate = [\n      (\"0\" + (d.getMonth() + 1)).slice(-2),\n      (\"0\" + d.getDate()).slice(-2),\n      d.getFullYear(),\n    ].join(\"-\");\n    let formattedDate = `${dDate}`;\n\n    // const formatDate = (m, d, y) => {\n    //   if (m < 10 || d < 10) {\n    //     return `0${month}-0${day}-${year}`;\n    //   }\n\n    //   return `${month}-${day}-${year}`;\n    // };\n\n    setValue(formattedDate);\n  };\n\n  return (\n    <DatePicker\n      {...field}\n      {...props}\n      name={field.name}\n      selected={field.selected}\n      className=\"input\"\n      onChange={(date) => handleChange(date)}\n      placeholderText={field.placeholderText}\n      value={value}\n    />\n  );\n};\n\nexport const UploadInput = ({ ...props }) => {\n  const { setFieldValue } = useFormikContext();\n  const [selected, setSelected] = useState(undefined);\n\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n\n    setFieldValue(\"files\", file);\n    setSelected(file);\n  };\n\n  const handleRemoveFile = () => {\n    props.onChange(props.id);\n  };\n\n  const fileUploadHandler = () => {};\n\n  return (\n    <div className=\"file\">\n      <div>\n        {/* {props.value !== \"\" && progress === -1 && (\n          <UploadThumb path={props.value} />\n        )} */}\n      </div>\n      {/* {props.value && (\n        <a className=\"button\" role=\"button\" onClick={handleRemoveFile}>\n          Remove\n        </a>\n      )} */}\n      <div>\n        <label className=\"file-label\">\n          <input\n            className=\"file-input\"\n            type=\"file\"\n            name=\"files\"\n            id=\"upload\"\n            onChange={handleFileChange}\n          />\n          <span className=\"file-cta\">\n            <span className=\"file-icon\">\n              <FontAwesomeIcon size=\"lg\" icon={faUpload} />\n            </span>\n            <span className=\"file-label\">Choose a file...</span>\n          </span>\n          <span className=\"file-name\">File name</span>\n        </label>\n        <UploadThumb file={selected} />\n      </div>\n    </div>\n  );\n};\n\nexport default TextInput;\n","import React, { useState, Fragment, useEffect } from \"react\";\nimport { Prompt, Link } from \"react-router-dom\";\n\nimport { fetchContract } from \"../../actions/contracts\";\n\nimport { Formik, Form } from \"formik\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport * as yup from \"yup\";\nimport {\n  TextInput,\n  TextareaInput,\n  SelectField,\n  PhoneField,\n  EmailField,\n  DateField,\n  PriceField,\n  UploadInput,\n} from \"../UI/FormElements\";\n\nimport { useParams } from \"react-router-dom\";\n\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nimport classes from \"../../index.css\";\n\nconst ContractForm = (props) => {\n  const [isEntering, setIsEntering] = useState(false);\n  const [isDraft, setIsDraft] = useState(false);\n\n  const { id, slug } = useParams();\n  const isNewContract = !slug;\n\n  const [initialValues, setInitialValues] = useState({\n    slug: \"\",\n    company: \"\",\n    client: \"\",\n    email: \"\",\n    phone: \"\",\n    address: \"\",\n    city: \"\",\n    state: \"\",\n    zipcode: \"\",\n    title: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    price: \"\",\n    upload: \"\",\n    notes: \"\",\n    status: \"\",\n    files: null,\n    filename: \"\",\n  });\n\n  useEffect(() => {\n    if (!isNewContract) {\n      setInitialValues(props.contract);\n    }\n  }, [isNewContract, props.contract]);\n\n  const validationSchema = yup.object().shape({\n    company: yup.string(),\n    client: yup.string(),\n    phone: yup.string(),\n    email: yup.string().email(\"Invalid email address\").max(255),\n    zipcode: yup\n      .string()\n      .matches(/^[0-9]+$/, \"Must be only digits\")\n      .min(5, \"Must be exactly 5 digits\")\n      .max(5, \"Must be exactly 5 digits\"),\n    file: yup.mixed(),\n  });\n\n  const phoneRegex =\n    /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n\n  const finishEnteringHandler = () => {\n    setIsEntering(false);\n  };\n\n  const formFocusedHandler = () => {\n    setIsEntering(true);\n  };\n\n  const onDraftClick = () => {\n    setIsDraft(true);\n  };\n\n  const onSubmit = (fields, { setStatus, setSubmitting }) => {\n    setStatus();\n\n    if (isNewContract) {\n      props.onSaveContractData(fields, setSubmitting);\n    } else if (isNewContract && isDraft) {\n      props.onDraftContractData(fields, setSubmitting);\n    } else {\n      props.onUpdateContractData(slug, fields, setSubmitting);\n    }\n  };\n\n  return (\n    <Fragment>\n      <Prompt\n        when={isEntering}\n        message={(location) =>\n          \"Are you sure you want to leave? All your entered data will be lost!\"\n        }\n      />\n\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        enableReinitialize={true}\n        onSubmit={onSubmit}\n      >\n        {function Render(formik) {\n          const [contract, setContract] = useState({});\n\n          // useEffect(() => {\n          //   let mounted = true;\n          //   if (!isNewContract) {\n          //     setTimeout(() => {\n          //       if (mounted) {\n          //         setInitialValues(props.contract);\n          //       }\n          //     }, 500);\n          //   }\n\n          //   return () => (mounted = false);\n          // }, []);\n\n          // useEffect(() => {\n          //   if (!isNewContract) {\n          //     // get contract and set form fields\n          //     props.dispatchData(fetchContract(id)).then((contract) => {\n          //       const fields = [\n          //         \"company\",\n          //         \"client\",\n          //         \"email\",\n          //         \"phone\",\n          //         \"address\",\n          //         \"city\",\n          //         \"state\",\n          //         \"zipcode\",\n          //         \"title\",\n          //         \"startDate\",\n          //         \"endDate\",\n          //         \"price\",\n          //         \"upload\",\n          //         \"notes\",\n          //         \"status\",\n          //         \"files\",\n          //         \"filename\",\n          //       ];\n          //       fields.forEach((field) =>\n          //         formik.setFieldValue(field, contract[field], false)\n          //       );\n          //       setContract(contract);\n          //     });\n          //   }\n          // }, [formik]);\n\n          return (\n            <Form\n              onFocus={formFocusedHandler}\n              onSubmit={formik.handleSubmit}\n              encType=\"multipart/form-data\"\n            >\n              <div className=\"columns\">\n                <div className=\"column form-section\">\n                  <h5 className=\"form-section_title\">Client Info</h5>\n                  <div className=\"field is-grouped\">\n                    <div className=\"control is-expanded\">\n                      <TextInput\n                        name=\"company\"\n                        type=\"text\"\n                        placeholder=\"Company name\"\n                      />\n                    </div>\n                    <div className=\"control is-expanded\">\n                      <TextInput\n                        name=\"client\"\n                        type=\"text\"\n                        placeholder=\"Client name\"\n                      />\n                    </div>\n\n                    <div className=\"control is-expanded\">\n                      <EmailField\n                        name=\"email\"\n                        type=\"email\"\n                        placeholder=\"Client email\"\n                      />\n                    </div>\n                    <div className=\"control is-expanded\">\n                      <PhoneField\n                        name=\"phone\"\n                        type=\"tel\"\n                        placeholder=\"Client phone\"\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"field\">\n                    <div className=\"control\">\n                      <TextInput\n                        name=\"address\"\n                        type=\"text\"\n                        placeholder=\"Address\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"field is-grouped\">\n                    <div className=\"control\">\n                      <TextInput name=\"city\" type=\"text\" placeholder=\"City\" />\n                    </div>\n\n                    <div className=\"control\">\n                      <SelectField name=\"state\">\n                        <option>Alaska</option>\n                        <option>New Hampshire</option>\n                      </SelectField>\n                    </div>\n\n                    <div className=\"control\">\n                      <TextInput\n                        name=\"zipcode\"\n                        type=\"text\"\n                        placeholder=\"Zipcode\"\n                      />\n                    </div>\n                  </div>\n                  {/* end of Client Info */}\n                </div>\n              </div>\n              {/* End of Client Info */}\n\n              <div className=\"columns\">\n                <div className=\"column form-section\">\n                  <h5 className=\"form-section_title\">Contract Info</h5>\n\n                  <div className=\"field is-grouped\">\n                    <div className=\"control is-expanded\">\n                      <TextInput\n                        name=\"title\"\n                        type=\"text\"\n                        placeholder=\"Contract Name\"\n                        required\n                      />\n                    </div>\n                    <div className=\"control\">\n                      <PriceField\n                        name=\"price\"\n                        type=\"number\"\n                        placeholder=\"Price\"\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"field is-grouped\">\n                    <div className=\"control\">\n                      <SelectField name=\"category\">\n                        <option>Maintenance</option>\n                        <option>Project</option>\n                      </SelectField>\n                    </div>\n\n                    <div className=\"control\">\n                      <SelectField name=\"level\">\n                        <option>Easy</option>\n                        <option>Medium</option>\n                      </SelectField>\n                    </div>\n\n                    <div className=\"control is-expanded\">\n                      <DateField\n                        name=\"startDate\"\n                        placeholderText=\"Start Date\"\n                        selected={formik.startDate}\n                      />\n                    </div>\n                    <div className=\"control is-expanded\">\n                      <DateField\n                        name=\"endDate\"\n                        placeholderText=\"End Date\"\n                        selected={formik.endDate}\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"field\">\n                    <div className=\"control\">\n                      <TextareaInput\n                        name=\"notes\"\n                        type=\"textarea\"\n                        placeholder=\"Notes\"\n                      ></TextareaInput>\n                    </div>\n                  </div>\n\n                  <div className=\"form-section\">\n                    <div className=\"field\">\n                      <div className=\"control\">\n                        <UploadInput upload={props.upload} />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {/* End of Contract Info */}\n\n              <div className=\"control-panel\">\n                <div className=\"columns\">\n                  <div className=\"column\">\n                    <div className=\"field\">\n                      <div className=\"control\">\n                        <button\n                          className=\"button is-outlined is-white\"\n                          type=\"button\"\n                          onClick={props.onCancel}\n                          disabled={formik.isSubmitting}\n                        >\n                          Cancel\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"column\">\n                    <div className=\"field-group is-pulled-right\">\n                      <div className=\"field is-horizontal\">\n                        <div className=\"control\">\n                          <button\n                            className=\"button is-outlined is-white mr-3\"\n                            type=\"submit\"\n                            onClick={onDraftClick}\n                            disabled={formik.isSubmitting}\n                          >\n                            {formik.isSubmitting && isDraft ? (\n                              <div className={classes.loading}>\n                                <LoadingSpinner />\n                              </div>\n                            ) : (\n                              \"Draft\"\n                            )}\n                          </button>\n                        </div>\n\n                        <div className=\"control\">\n                          <button\n                            className=\"button is-link\"\n                            type=\"submit\"\n                            disabled={formik.isSubmitting}\n                          >\n                            {formik.isSubmitting && (\n                              <div className={classes.loading}>\n                                <LoadingSpinner />\n                              </div>\n                            )}\n                            {props.text}\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </Form>\n          );\n        }}\n      </Formik>\n    </Fragment>\n  );\n};\n\nexport default ContractForm;\n","import { useReducer, useCallback } from \"react\";\n\nfunction httpReducer(state, action) {\n  if (action.type === \"SEND\") {\n    return {\n      data: null,\n      error: null,\n      status: \"pending\",\n    };\n  }\n\n  if (action.type === \"SUCCESS\") {\n    return {\n      data: action.responseData,\n      error: null,\n      status: \"completed\",\n    };\n  }\n\n  if (action.type === \"ERROR\") {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: \"completed\",\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? \"pending\" : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(async function (requestData) {\n    dispatch({ type: \"SEND\" });\n    try {\n      const responseData = await requestFunction(requestData);\n      dispatch({ type: \"SUCCESS\", responseData });\n    } catch (error) {\n      dispatch({\n        type: \"ERROR\",\n        errorMessage: error.message || \"Something went wrong!\",\n      });\n    }\n  },\n    [requestFunction]\n  );\n\n  return {\n      sendRequest,\n      ...httpState,\n  };\n}\n\nexport default useHttp;\n","import axios from \"../axios/axios\";\nimport {\n  ADD_UPLOAD,\n  GET_UPLOADS,\n  REMOVE_UPLOAD,\n  EDIT_UPLOAD,\n  LOAD_UPLOADS_TABLE,\n} from \"../constants/ActionTypes\";\n\nconst initialState = {\n  filename: \"\",\n  files: null,\n  path: \"\",\n};\n\nlet formData = new FormData();\n\nconst config = {\n  headers: { \"Content-Type\": \"multipart/form-data\" },\n  onUploadProgress: (progressEvent) => {\n    console.log((progressEvent.loaded / progressEvent.total) * 100 + \"%\");\n  },\n};\n\nconst _addUpload = (upload) => ({\n  type: ADD_UPLOAD,\n  upload,\n});\n\nexport const addUpload =\n  (uploadData = initialState) =>\n  async (dispatch) => {\n    formData.append(\"filename\", uploadData.filename);\n    formData.append(\"files\", uploadData.files);\n    formData.append(\"path\", uploadData.path);\n\n    console.log(\"Upload is: \", uploadData);\n\n    try {\n      const result = await axios.post(\"uploads/add\", formData, config);\n      console.log(\"result is: \", result);\n      dispatch(_addUpload(result.data));\n    } catch (error) {\n      if (error.response) {\n        console.log(error.response);\n      } else if (error.request) {\n        console.log(error.request);\n      } else {\n        console.log(\"Error\", error.message);\n      }\n    }\n  };\n\nconst _removeUpload = ({ id = {} }) => ({\n  type: REMOVE_UPLOAD,\n  id,\n});\n\nexport const removeUpload = ({ id } = {}) => {\n  return (dispatch) => {\n    return axios.delete(`uploads/${id}`).then((res) => {\n      dispatch(_removeUpload({ id }));\n    });\n  };\n};\n\nconst _editUpload = (id, updates) => ({\n  type: EDIT_UPLOAD,\n  id,\n  updates,\n});\n\nexport const editUpload = (id, updates) => {\n  return (dispatch) => {\n    return axios.put(`uploads/${id}`, updates).then(() => {\n      dispatch(_editUpload(id, updates));\n    });\n  };\n};\n\nconst _getUploads = (uploads, loading) => ({\n  type: GET_UPLOADS,\n  uploads,\n});\n\nexport const getUploads = (callback) => (dispatch, getState) => {\n  return axios\n    .get(\"uploads\")\n    .then((response) => {\n      const uploads = [];\n\n      response.data.forEach((item) => {\n        uploads.push(item);\n      });\n\n      dispatch(_getUploads(uploads));\n    })\n    .catch((error) => {\n      if (error.response) {\n        console.log(error.response.data);\n      } else if (error.request) {\n        console.log(error.request);\n      } else {\n        console.log(\"Error\", error.message);\n      }\n    });\n};\n\nexport const loadUploadsTabls = (uploads) => ({\n  type: LOAD_UPLOADS_TABLE,\n  payload: uploads,\n});\n","import axios from \"../axios/axios\";\nimport { toast } from \"react-toastify\";\n\nimport {\n  ADD_NOTIFICATION,\n  REMOVE_NOTIFICATION,\n  GET_NOTIFICATIONS,\n  SHOW_NOTIFICATION,\n  LOAD_NOTIFICATION_TABLE,\n} from \"../constants/ActionTypes\";\n\nconst _addNotification = (notification) => ({\n  type: ADD_NOTIFICATION,\n  notification,\n});\n\nconst initialState = {\n  title: \"\",\n  status: \"pending\",\n  message: \"\",\n  url: \"\",\n  itemTitle: ''\n};\n\nexport const addNotification =\n  (notificationData = initialState) =>\n  (dispatch) => {\n    const notification = {\n      title: notificationData.title,\n      status: notificationData.status,\n      message: notificationData.message,\n      url: notificationData.url,\n      itemTitle: notificationData.itemTitle\n    };\n\n    return axios.post(\"notifications/add\", notification).then((result) => {\n      dispatch(_addNotification(result.data));\n    });\n  };\n\nconst _removeNotification = ({ id = {} }) => ({\n  type: REMOVE_NOTIFICATION,\n  id,\n});\n\nexport const removeNotification = ({ id } = {}) => {\n  return (dispatch) => {\n    return axios.delete(`notifications/${id}`).then((res) => {\n      dispatch(_removeNotification({ id }));\n    });\n  };\n};\n\nconst _getNotifications = (notifications) => ({\n  type: GET_NOTIFICATIONS,\n  notifications,\n});\n\nexport const getNotifications = (callback) => (dispatch, getState) => {\n  return axios\n    .get(\"notifications\")\n    .then((response) => {\n      const notifications = [];\n\n      response.data.forEach((item) => {\n        notifications.push(item);\n      });\n\n      dispatch(_getNotifications(notifications));\n      //toast.default();\n    })\n    .catch((error) => {\n      if (error.response) {\n        console.log(error.response.data);\n      } else if (error.request) {\n        console.log(error.request);\n      } else {\n        console.log(\"Error\", error.message);\n      }\n    });\n};\n\nexport const loadNotificationTable = (notifications) => ({\n  type: LOAD_NOTIFICATION_TABLE,\n  payload: notifications,\n});\n","import { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport ContractForm from \"./ContractForm\";\nimport useHttp from \"../../hooks/use-http\";\n\nimport { addContract, editContract } from \"../../actions/contracts\";\nimport { addUpload } from \"../../actions/uploads\";\nimport { addNotification } from \"../../actions/notifications\";\n\nconst { v4: uuidv4 } = require(\"uuid\");\n\nconst ContractModal = (props) => {\n  const { sendRequest, loadingStatus } = useHttp(addContract);\n  const history = useHistory();\n  const [id, setId] = useState();\n\n  const contracts = props.contracts;\n\n  const saveContractDataHandler = (fields, setSubmitting) => {\n    const savedData = {\n      ...fields,\n      status: \"Active\",\n      slug: fields.title,\n      upload: fields.files.name,\n      filename: fields.files.name,\n      path: fields.path,\n    };\n\n    props\n      .dispatchData(addContract(savedData))\n      .then(() => {\n        props.dispatchData(addUpload(savedData));\n      })\n      .then(() => {\n        props.dispatchData(\n          addNotification({\n            title: \"A new contract was created!\",\n            itemTitle: savedData.title,\n            message: `A new contract was created for ${savedData.company}`,\n            url: `/contracts/${savedData.slug}`,\n          })\n        );\n      })\n      .catch((error) => {\n        setSubmitting(false);\n        console.log(error);\n      });\n\n    props.onHideModal();\n  };\n\n  const draftContractDataHandler = (fields, setSubmitting, isNewContract) => {\n    const draftedData = {\n      ...fields,\n      status: \"Draft\",\n      slug: fields.title,\n      upload: fields.files.name,\n      filename: fields.files.name,\n      path: fields.path,\n    };\n\n    props\n      .dispatchData(addContract(draftedData))\n      .then(() => {\n        props.dispatchData(addUpload(draftedData));\n      })\n      .then(\n        props.dispatchData(\n          addNotification({\n            title: \"A drafted contract was created!\",\n            itemTitle: draftedData.title,\n            message: `A drafted contract was created for ${draftedData.company}`,\n            url: `/contracts/${draftedData.slug}`,\n          })\n        )\n      )\n      .catch((error) => {\n        setSubmitting(false);\n        console.log(error);\n      });\n\n    props.onHideModal();\n  };\n\n  const updateContractDataHandler = (id, fields, setSubmitting) => {\n    // Update contract data\n    props\n      .dispatchData(editContract(id, fields))\n      .then(\n        props.dispatchData(\n          addNotification({\n            title: \"A contract was updated!\",\n            itemTitle: fields.title,\n            message: `The contract for ${fields.company} was updated.`,\n            url: `/contracts/${fields.slug}`,\n          })\n        )\n      )\n      .catch((error) => {\n        setSubmitting(false);\n        console.log(error);\n      });\n\n    props.onHideModal();\n  };\n\n  return (\n    <div className={`modal ${props.isOpen === true ? \"is-active\" : \"\"}`}>\n      <div className=\"modal-background\"></div>\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head\">\n          <p className=\"modal-card-title\">\n            {props.type === \"edit\" ? \"Update Contract\" : \"New Contract\"}\n          </p>\n        </header>\n        <section className=\"modal-card-body\">\n          <ContractForm\n            type={props.type}\n            onSaveContractData={saveContractDataHandler}\n            onUpdateContractData={updateContractDataHandler}\n            onDraftContractData={draftContractDataHandler}\n            onCancel={props.onHideModal}\n            isLoading={loadingStatus === \"pending\"}\n            text={props.text}\n            contract={props.contract}\n            dispatchData={props.dispatchData}\n          />\n        </section>\n      </div>\n      <button\n        onClick={props.onHideModal}\n        className=\"modal-close is-large\"\n        aria-label=\"close\"\n      />\n    </div>\n  );\n};\n\nexport default ContractModal;\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport ContractList from \"../components/contracts/ContractList\";\nimport Header from \"../components/Header\";\nimport ContractModal from \"../components/contracts/ContractModal.js\";\n\nconst Contracts = (props) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n\n  let contracts = props.contractState;\n\n  //let contracts = props.contractState.contractObj.contracts === undefined ? [] : props.contractState.contractObj.contracts;\n  const dispatchData = props.dispatch;\n  let filters = props.filters.items;\n\n  const openFormModal = () => {\n    setIsOpen(true);\n  };\n\n  const closeFormModal = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <div>\n      <Header title=\"Contracts\" onOpenModal={openFormModal} />\n\n      <div className=\"container content\">\n        <ContractList\n          contracts={contracts}\n          isLoading={isLoading}\n          dispatchData={dispatchData}\n          filters={filters}\n        />\n      </div>\n\n      {isOpen && (\n        //<ContractModal onClose={showContractModal ? \"is-active\" : \"false\"} />\n        <ContractModal\n          onHideModal={closeFormModal}\n          onShowModal={openFormModal}\n          dispatchData={dispatchData}\n          isOpen={isOpen}\n          contracts={contracts}\n          text=\"Submit\"\n        />\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  contractState: state.contracts,\n  filters: state.filters,\n  sort: state,\n  dispatchData: state.dispatch,\n});\n\nexport default connect(mapStateToProps)(Contracts);\n","import { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport const Breadcrumbs = (props) => {\n  return (\n    <nav\n      className={`breadcrumb ${props.className ? props.className : \"\"}`}\n      aria-label=\"breadcrumbs\"\n    >\n      <ul>{props.children}</ul>\n    </nav>\n  );\n};\n\nexport const BreadcrumbItem = (props) => {\n  return (\n    <Fragment>\n      <li\n        className={` ${props.className ? props.className : \"\"}`}\n        aria-current={props.active ? \"page\" : undefined}\n      >\n        <Link\n          className=\"is-active\"\n          to={props.to}\n          title={props.title}\n          target={props.target}\n          {...props}\n        >\n          {props.children}\n        </Link>\n      </li>\n    </Fragment>\n  );\n};\n","import ContractButton from \"../contracts/ContractButton\";\nimport { Breadcrumbs, BreadcrumbItem } from \"../../components/UI/Breadcrumbs\";\n\nconst ContractHeader = (props) => {\n  const statusVariant =\n    props.contract.status === \"Active\"\n      ? \"is-success\"\n      : props.contract.status === \"Draft\"\n      ? \"is-warning\"\n      : props.contract.status === \"Expired\"\n      ? \"is-danger\"\n      : \"primary\";\n\n  return (\n    <section className=\"page-header\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"is-flex is-align-items-center\">\n            <h1 className=\"is-size-2 mr-3\">\n              {props.title\n                ? `Contract ${props.slug}: ${props.contract.title}`\n                : `Contract ${props.slug}`}\n            </h1>\n            <span className={`tag is-medium ${statusVariant}`}>\n              {props.contract.status}\n            </span>\n          </div>\n\n          <ContractButton\n            text=\"Edit Contract\"\n            onOpenModal={props.openFormModal}\n          />\n        </div>\n        <div className=\"row\">\n          <Breadcrumbs className=\"has-arrow-separator\">\n            <BreadcrumbItem to={`/dashboard`}>Dashboard</BreadcrumbItem>\n            <BreadcrumbItem to={`/contracts`}>Contracts</BreadcrumbItem>\n            <BreadcrumbItem\n              to={`/contracts/${props.slug}`}\n              className=\"is-active\"\n            >{`Contract ${props.slug}`}</BreadcrumbItem>\n          </Breadcrumbs>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default ContractHeader;\n","import { checkIfEmpty } from \"../../utils/utils\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEnvelope, faPhone } from \"@fortawesome/free-solid-svg-icons\";\n\nconst ClientDetails = (props) => {\n  return (\n    <div className=\"details-wrap box\">\n      <div id=\"clientDetails\" className=\"block entry-title\">\n        <h4 className=\"title\">Client Details</h4>\n      </div>\n\n      <table className=\"table\">\n        <tbody>\n          <tr>\n            <td>\n              <h5>Client:</h5>\n            </td>\n            <td>\n              <p>{`${props.contract.client}`}</p>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <h5>Company:</h5>\n            </td>\n            <td>\n              <p>{`${props.contract.company}`}</p>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <h5>Phone:</h5>\n            </td>\n            <td>\n              <span className=\"icon-text\">\n                <span className=\"icon\">\n                  <FontAwesomeIcon icon={faPhone} />\n                </span>\n                <span>{checkIfEmpty(props.contract.phone)}</span>\n              </span>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <h5>Email:</h5>\n            </td>\n            <td>\n              <span className=\"icon-text\">\n                <span className=\"icon\">\n                  <FontAwesomeIcon icon={faEnvelope} />\n                </span>\n                <span>{checkIfEmpty(props.contract.email)}</span>\n              </span>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <h5>Address</h5>\n            </td>\n            <td>\n              <p>{checkIfEmpty(props.contract.address)}</p>\n              <p>{checkIfEmpty(props.contract.city)}</p>\n              <p>{checkIfEmpty(props.contract.state)}</p>\n              <p>{checkIfEmpty(props.contract.zipcode)}</p>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ClientDetails;\n","import {\n  getFormattedDate,\n  getFormattedPrice,\n  checkIfEmpty,\n} from \"../../utils/utils\";\n\nconst ContractDetails = (props) => {\n  return (\n    <div className=\"details-wrap box\">\n      <div id=\"contractDetails\" className=\"block entry-title\">\n        <h4 className=\"title\">Contract Details</h4>\n      </div>\n\n      <table className=\"table\">\n        <tbody>\n          <tr>\n            <td>\n              <h5>Contract ID:</h5>\n            </td>\n            <td>\n              <p>{`#${props.contract.id}`}</p>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <h5>Start Date:</h5>\n            </td>\n            <td>\n              <p>{checkIfEmpty(getFormattedDate(props.contract.startDate))}</p>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <h5>End Date:</h5>\n            </td>\n            <td>\n              <p>{checkIfEmpty(getFormattedDate(props.contract.endDate))}</p>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <h5>Contract Amount:</h5>\n            </td>\n            <td>\n              <p>{checkIfEmpty(getFormattedPrice(props.contract.price))}</p>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <h5>Notes</h5>\n            </td>\n            <td>\n              <p>{checkIfEmpty(props.contract.notes)}</p>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ContractDetails;\n","import { useState } from \"react\";\nimport Lightbox from \"react-image-lightbox\";\nimport \"react-image-lightbox/style.css\";\n\nconst LightboxImage = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <div className=\"row\">\n      <a href=\"#\" onClick={() => setIsOpen(true)}>\n        <img\n          src={props.attachment}\n          alt={`upload.filename`}\n          width={100}\n          height={100}\n        />\n      </a>\n      {isOpen && (\n        <Lightbox\n          mainSrc={props.attachment}\n          onCloseRequest={() => setIsOpen(false)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default LightboxImage;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBook } from \"@fortawesome/free-solid-svg-icons\";\nimport LightboxImage from \"../UI/LightboxImage\";\n\nconst ContractAttachments = (props) => {\n  //const attachment = `../../uploads/${props.upload[0].filename}`;\n\n  const attachment = props.upload.length ? `../../uploads/${props.upload[0].filename}` : ''\n\n  return (\n    <div id=\"attachments\" className=\"box\">\n      <div className=\"container\">\n        <div className=\"column\">\n          <div className=\"block entry-title\">\n            <h4 className=\"title\">Attachments</h4>\n          </div>\n\n          {attachment ? (\n            <LightboxImage attachment={attachment} />\n          ) : (\n            <span className=\"icon is-large\">\n              <FontAwesomeIcon className=\"fas fa-2x\" icon={faBook} />\n            </span>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ContractAttachments;\n","const Plugins = (props) => {\n  const plugins = [\n    {\n      title: \"Sample plugin\",\n      amount: 300,\n      orderDate: \"01/01/2021\",\n      expireDate: \"01/01/2022\",\n      status: \"active\",\n    },\n  ];\n\n  return (\n    <div id=\"plugins\" className=\"box\">\n      <div className=\"block entry-title\">\n        <h4 className=\"title\">Plugins</h4>\n      </div>\n      <table className=\"table\">\n        {plugins.map((plugin, index) => {\n          return (\n            <tbody key={index}>\n              <tr>\n                <td>\n                  <h5>Plugin:</h5>\n                </td>\n                <td>\n                  <p>{plugin.title}</p>\n                </td>\n                <td>\n                  <h5>Price:</h5>\n                </td>\n                <td>\n                  <p>{`$${plugin.amount}`}</p>\n                </td>\n\n                <td>\n                  <h5>Order Date:</h5>\n                </td>\n                <td>\n                  <p>{plugin.orderDate}</p>\n                </td>\n                <td>\n                  <h5>Renewal Date:</h5>\n                </td>\n                <td>\n                  <p>{plugin.expireDate}</p>\n                </td>\n                <td>\n                  <h5>Status:</h5>\n                </td>\n                <td>\n                  <p>{plugin.status}</p>\n                </td>\n              </tr>\n            </tbody>\n          );\n        })}\n      </table>\n    </div>\n  );\n};\n\nexport default Plugins;\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { Fragment } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { HashLink } from \"react-router-hash-link\";\n\nimport ContractHeader from \"../components/singleContract/ContractHeader\";\nimport ClientDetails from \"../components/singleContract/ClientDetails\";\nimport ContractDetails from \"../components/singleContract/ContractDetails\";\nimport ContractAttachments from \"../components/singleContract/ContractAttachments\";\nimport Plugins from \"../components/plugins/Plugins\";\n\nimport ContractModal from \"../components/contracts/ContractModal.js\";\n\nconst ContractSingle = (props) => {\n  const dispatchData = props.dispatch;\n  const [isOpen, setIsOpen] = useState(false);\n  const [activeLink, setActiveLink] = useState(null);\n\n  let { slug } = useParams();\n  let attachment = \"\";\n\n  let hashLinks = [\n    {\n      to: \"#contractDetails\",\n      text: \"Contract Details\",\n    },\n    {\n      to: \"#clientDetails\",\n      text: \"Client Details\",\n    },\n    {\n      to: \"#attachments\",\n      text: \"Attachments\",\n    },\n  ];\n\n  let contracts = props.contracts;\n\n  let contract = contracts.find((c) => {\n    return c.slug === slug;\n  });\n\n  let uploads = props.uploads;\n\n  //console.log(\"Uploads are: \", uploads);\n\n  // if (!uploads.length) {\n  //   return \"No attachments found\";\n  // } else {\n  //   attachment = uploads.find((u) => {\n  //     return u.filename === contract.upload ? u : \"\";\n  //   });\n  // }\n\n  const openFormModal = () => {\n    setIsOpen(true);\n  };\n\n  const closeFormModal = () => {\n    setIsOpen(false);\n  };\n\n  const handleHashClick = (index) => {\n    setActiveLink(index);\n  };\n\n  if (!contract) {\n    return <p>Contract not found!</p>;\n  }\n\n  return (\n    <Fragment>\n      <ContractHeader\n        slug={slug}\n        contract={contract}\n        openFormModal={openFormModal}\n      />\n\n      <section id=\"contractSingle\" className=\"section page-single\">\n        <div className=\"container\">\n          <div className=\"columns\">\n            <div className=\"column is-one-quarter sidebar\">\n              <div className=\"box\">\n                <div className=\"menu\">\n                  <ul className=\"menu-list\">\n                    {hashLinks.map((link, index) => {\n                      return (\n                        <li key={index}>\n                          <HashLink\n                            className={index === activeLink ? \"is-active\" : \"\"}\n                            smooth\n                            to={link.to}\n                            onClick={() => handleHashClick(index)}\n                          >\n                            {link.text}\n                          </HashLink>\n                        </li>\n                      );\n                    })}\n                  </ul>\n                </div>\n              </div>\n            </div>\n            <div className=\"column is-three-quarters\">\n              <ContractDetails contract={contract} />\n              <ClientDetails contract={contract} />\n              <Plugins />\n              <ContractAttachments\n                upload={props.uploads}\n                attachment={attachment}\n                slug={slug}\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {isOpen && (\n        <ContractModal\n          type=\"edit\"\n          contract={contract}\n          upload={props.uploads}\n          onHideModal={closeFormModal}\n          onShowModal={openFormModal}\n          dispatchData={dispatchData}\n          isOpen={isOpen}\n          text=\"Update Contract\"\n        />\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    contracts: state.contracts,\n    dispatchData: state.dispatch,\n    uploads: state.uploads,\n  };\n};\n\nexport default connect(mapStateToProps)(ContractSingle);\n","import { Fragment, useState } from \"react\";\n\nimport FiltersToolbar from \"../tables/FiltersToolbar\";\nimport { EventsTable } from \"../tables/Table\";\nimport NoEventsFound from \"./NoEventsFound\";\n\nimport Spinner from \"../UI/LoadingSpinner\";\n\nimport \"bulma/css/bulma.min.css\";\n\nconst EventList = (props) => {\n  const events = props.events;\n  let filteredEvents = [];\n\n  console.log(\"Events inside list \", events);\n\n  const [filteredStatus, setFilteredStatus] = useState();\n  const [filteredDate, setFilteredDate] = useState();\n\n  const [query, setQuery] = useState(\"\");\n  const [searchParam] = useState([\"client\", \"title\"]);\n\n  const [order, setOrder] = useState(\"asc\");\n  const [orderBy, setOrderBy] = useState([]);\n\n  const statusFilterChangeHandler = (selectedStatus) => {\n    setFilteredStatus(selectedStatus);\n  };\n\n  const dateFilterChangeHandler = (selectedDate) => {\n    setFilteredDate(selectedDate);\n  };\n\n  const searchFilterChangeHandler = (query) => {\n    setQuery(query);\n  };\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  if (!events.length) {\n    return (\n      <h2>No Events found!</h2>\n    )\n  } else {\n    filteredEvents = events.filter((item) => {\n      if (\n        (filteredStatus === \"All\" ||\n          filteredStatus === \"draft\" ||\n          filteredStatus === \"expired\" ||\n          filteredStatus === \"active\") &&\n        filteredStatus !== null\n      ) {\n        return item.status.toLowerCase() === filteredStatus;\n      }\n\n      // If some searchParam's value matches the value of the contract\n      // Return true\n\n      if (\n        (filteredDate === \"2022\" ||\n          filteredDate === \"2021\" ||\n          filteredDate === \"2020\" ||\n          filteredDate === \"2019\" ||\n          filteredDate === \"2018\") &&\n        filteredDate !== null\n      ) {\n        return item.startDate.getFullYear().toString() === filteredDate;\n      }\n\n      return searchParam.some((param) => {\n        const searchItem = item[param];\n\n        if (searchItem === null) {\n          console.log(\"Search value is null\");\n          return;\n        }\n\n        return (\n          searchItem.toString().toLowerCase().indexOf(query.toLowerCase()) > -1\n        );\n      });\n    });\n  }\n\n  if (!filteredEvents || filteredEvents.length === 0) {\n    return (\n      <Fragment>\n        <FiltersToolbar\n          selectedStatus={filteredStatus}\n          selectedDate={filteredDate}\n          onChangeStatusFilter={statusFilterChangeHandler}\n          onChangeDateFilter={dateFilterChangeHandler}\n          searchValue={query}\n        />\n        <h2>No events found.</h2>\n      </Fragment>\n    );\n  } else {\n    return (\n      <Fragment>\n        <FiltersToolbar\n          selectedStatus={filteredStatus}\n          selectedDate={filteredDate}\n          onChangeStatusFilter={statusFilterChangeHandler}\n          onChangeDateFilter={dateFilterChangeHandler}\n          onChangeSearchFilter={searchFilterChangeHandler}\n          order={order}\n          orderBy={orderBy}\n          onRequestSort={handleRequestSort}\n        />\n\n        {props.isLoading && <Spinner />}\n\n        <EventsTable\n          events={filteredEvents}\n          order={order}\n          orderBy={orderBy}\n          dispatchData={props.dispatchData}\n          filters={props.filters}\n        />\n      </Fragment>\n    );\n  }\n};\n\nexport default EventList;\n","import React, { useState, Fragment, useEffect } from \"react\";\nimport { Prompt, Link } from \"react-router-dom\";\n\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport * as yup from \"yup\";\nimport {\n  TextInput,\n  TextareaInput,\n  SelectField,\n  DateField,\n  PriceField,\n} from \"../UI/FormElements\";\n\nimport { useParams } from \"react-router-dom\";\n\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nimport classes from \"../../index.css\";\n\nconst sleep = (ms) => new Promise((r) => setTimeout(r, ms));\n\nconst EventForm = (props) => {\n  const [isEntering, setIsEntering] = useState(false);\n  const [isDraft, setIsDraft] = useState(false);\n\n  let { id } = useParams();\n\n  const isNewItem = !id;\n\n  const [initialValues, setInitialValues] = useState({\n    event: \"\",\n    client: \"\",\n    company: \"\",\n    isSingleDay: false,\n    startDate: \"\",\n    startTime: \"\",\n    endDate: \"\",\n    endTime: \"\",\n    eventItems: '',\n    lastYearsPrice: \"\",\n    upload: \"\",\n    notes: \"\",\n    status: \"\",\n  });\n\n  const validationSchema = yup.object().shape({\n    company: yup.string().required(\"Required\"),\n    client: yup.string().required(\"Required\"),\n  });\n\n  const finishEnteringHandler = () => {\n    setIsEntering(false);\n  };\n\n  const formFocusedHandler = () => {\n    setIsEntering(true);\n  };\n\n  const onDraftClick = () => {\n    setIsDraft(true);\n  };\n\n  const onSubmit = (fields, { setStatus, setSubmitting, resetForm }) => {\n    setStatus();\n\n    if (isDraft) {\n      props.onDraftItem(fields, setSubmitting, isNewItem);\n    } else {\n      props.onSaveItem(fields, setSubmitting, isNewItem, resetForm);\n    }\n  };\n\n  return (\n    <Fragment>\n      <Prompt\n        when={isEntering}\n        message={(location) =>\n          \"Are you sure you want to leave? All your entered data will be lost!\"\n        }\n      />\n\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        enableReinitialize={true}\n        onSubmit={onSubmit}\n      >\n        {function Render(formik) {\n          const [eventDetails, setEventDetails] = useState();\n\n          useEffect(() => {\n            let mounted = true;\n            if (!isNewItem) {\n              setTimeout(() => {\n                if (mounted) {\n                  setInitialValues(props.event);\n                }\n              }, 500);\n            }\n\n            return () => (mounted = false);\n          }, []);\n\n          return (\n            <Form\n              onFocus={formFocusedHandler}\n              onSubmit={formik.handleSubmit}\n              // noValidate\n            >\n              <div className=\"columns\">\n                <div className=\"column form-section\">\n                  <h5 className=\"form-section_title\">Client Info</h5>\n                  <div className=\"field is-grouped\">\n                    <div className=\"control is-expanded\">\n                      <TextInput\n                        name=\"company\"\n                        type=\"text\"\n                        placeholder=\"Company name\"\n                      />\n                    </div>\n                    <div className=\"control is-expanded\">\n                      <TextInput\n                        name=\"client\"\n                        type=\"text\"\n                        placeholder=\"Client name\"\n                      />\n                    </div>\n                  </div>\n\n                  {/* end of Client Info */}\n                </div>\n              </div>\n              {/* End of Client Info */}\n\n              <div className=\"columns\">\n                <div className=\"column form-section\">\n                  <h5 className=\"form-section_title\">Event Info</h5>\n\n                  <div className=\"field is-grouped\">\n                    <div className=\"control is-expanded\">\n                      <TextInput\n                        name=\"event\"\n                        type=\"text\"\n                        placeholder=\"Event Name\"\n                      />\n                    </div>\n                    <div className=\"control\">\n                      <PriceField\n                        name=\"lastYearsPrice\"\n                        type=\"number\"\n                        placeholder=\"Last Years Price\"\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"control\">\n                    <SelectField\n                      name=\"isSingleDay\"\n                      type=\"number\"\n                      placeholder=\"Last Years Price\"\n                    >\n                      <option>-</option>\n                      <option>Yes</option>\n                      <option>No</option>\n                    </SelectField>\n                  </div>\n\n                  <div className=\"field is-grouped\">\n                    <div className=\"control is-expanded\">\n                      <DateField\n                        name=\"startDate\"\n                        placeholderText=\"Start Date\"\n                        selected={formik.startDate}\n                      />\n                    </div>\n                    <div className=\"control is-expanded\">\n                      <TextInput\n                        name=\"startTime\"\n                        type=\"text\"\n                        placeholder=\"Start Time\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"field is-grouped\">\n                    <div className=\"control is-expanded\">\n                      <DateField\n                        name=\"endDate\"\n                        placeholderText=\"End Date\"\n                        selected={formik.endDate}\n                      />\n                    </div>\n                    <div className=\"control is-expanded\">\n                      <TextInput\n                        name=\"endTime\"\n                        type=\"text\"\n                        placeholder=\"End Time\"\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"field\">\n                    <div className=\"control\">\n                      <TextareaInput\n                        name=\"notes\"\n                        type=\"textarea\"\n                        className=\"textarea\"\n                        placeholder=\"Notes\"\n                      ></TextareaInput>\n                    </div>\n                  </div>\n\n                  <div className=\"form-section\">\n                    <div className=\"field\">\n                      <div className=\"control\">\n                        <label className=\"label\">File upload</label>\n                        <input\n                          id=\"upload\"\n                          name=\"upload\"\n                          type=\"file\"\n                          className=\"button link\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {/* End of Event Info */}\n\n              <div className=\"control-panel\">\n                <div className=\"columns\">\n                  <div className=\"column\">\n                    <div className=\"field\">\n                      <div className=\"control\">\n                        <button\n                          className=\"button is-outlined is-white\"\n                          type=\"button\"\n                          onClick={props.onCancel}\n                          disabled={formik.isSubmitting}\n                        >\n                          Cancel\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"column\">\n                    <div className=\"field-group is-pulled-right\">\n                      <div className=\"field is-horizontal\">\n                        <div className=\"control\">\n                          <button\n                            className=\"button is-outlined is-white mr-3\"\n                            type=\"submit\"\n                            onClick={onDraftClick}\n                            disabled={formik.isSubmitting}\n                          >\n                            {formik.isSubmitting && isDraft ? (\n                              <div className={classes.loading}>\n                                <LoadingSpinner />\n                              </div>\n                            ) : (\n                              \"Draft\"\n                            )}\n                          </button>\n                        </div>\n\n                        <div className=\"control\">\n                          <button\n                            className=\"button is-link\"\n                            type=\"submit\"\n                            disabled={formik.isSubmitting}\n                          >\n                            {formik.isSubmitting && (\n                              <div className={classes.loading}>\n                                <LoadingSpinner />\n                              </div>\n                            )}\n                            {props.text}\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </Form>\n          );\n        }}\n      </Formik>\n    </Fragment>\n  );\n};\n\nexport default EventForm;\n","import { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport EventForm from \"./EventForm\";\nimport useHttp from \"../../hooks/use-http\";\n\nimport { addEvent, editEvent } from \"../../actions/events\";\n\nimport { addNotification } from \"../../actions/notifications\";\n\nconst EventModal = (props) => {\n  const { sendRequest, loadingStatus } = useHttp(addEvent);\n  const history = useHistory();\n\n  const event = props.event;\n\n  // useEffect(() => {\n  //   if (loadingStatus === \"completed\") {\n  //     history.push(\"/contracts\");\n  //     props.onHideModal();\n  //   }\n  // }, [loadingStatus, history]);\n\n  const saveItemHandler = async (\n    fields,\n    setSubmitting,\n    isNewItem,\n    resetForm\n  ) => {\n    //await new Promise((r) => setTimeout(r, 1000));\n\n    const savedData = {\n      ...fields,\n      status: \"Active\",\n      slug: fields.event,\n    };\n\n    if (isNewItem) {\n      props\n        .dispatchData(addEvent(savedData))\n        .then(() => {\n          props.dispatchData(\n            addNotification({\n              title: \"A new event was created!\",\n              itemTitle: savedData.title,\n              message: `A new event was created for ${savedData.event}`,\n              url: `/events/${savedData.slug}`,\n            })\n          );\n        })\n        .catch((error) => {\n          setSubmitting(false);\n          console.log(error);\n        });\n\n      resetForm();\n    } else {\n      updateItemHandler(fields.id, savedData, setSubmitting);\n    }\n\n    props.onHideModal();\n  };\n\n  const draftItemHandler = (fields, setSubmitting, isNewItem) => {\n    //await new Promise((r) => setTimeout(r, 1000));\n\n    const draftedData = {\n      ...fields,\n      status: \"Draft\",\n      slug: fields.slug,\n    };\n\n    if (isNewItem) {\n      props\n        .dispatchData(addEvent(draftedData))\n        .then(() => {\n          props.addNotification({\n            title: \"A drafted event was created!\",\n            itemTitle: draftedData.title,\n            message: `A drafted event was created for ${draftedData.company}`,\n            url: `/events/${draftedData.slug}`,\n          });\n        })\n        .catch((error) => {\n          console.log(error);\n          setSubmitting(false);\n        });\n    } else {\n      updateItemHandler(fields.id, draftedData, setSubmitting);\n    }\n\n    props.onHideModal();\n  };\n\n  const updateItemHandler = (id, fields, setSubmitting) => {\n    // Update item data\n    props\n      .dispatchData(editEvent(id, fields))\n      .then(() => {\n        //history.push(\".\");\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    props.onHideModal();\n  };\n\n  return (\n    <div className={`modal ${props.isOpen === true ? \"is-active\" : \"\"}`}>\n      <div className=\"modal-background\"></div>\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head\">\n          <p className=\"modal-card-title\">\n            {props.type === \"edit\" ? \"Update Event\" : \"New Event\"}\n          </p>\n        </header>\n        <section className=\"modal-card-body\">\n          <EventForm\n            type={props.type}\n            onSaveItem={saveItemHandler}\n            onUpdateItem={updateItemHandler}\n            onDraftItem={draftItemHandler}\n            onCancel={props.onHideModal}\n            isLoading={loadingStatus === \"pending\"}\n            text={props.text}\n            event={event}\n            dispatchData={props.dispatchData}\n          />\n        </section>\n      </div>\n      <button\n        onClick={props.onHideModal}\n        className=\"modal-close is-large\"\n        aria-label=\"close\"\n      />\n    </div>\n  );\n};\n\nexport default EventModal;\n","import React, { useState, Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport EventList from \"../components/events/EventList\";\nimport Header from \"../components/Header\";\nimport EventModal from \"../components/events/EventModal.js\";\n\nconst Events = (props) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n\n  let events = props.eventState;\n  const dispatchData = props.dispatch;\n  const filters = props.filters;\n\n  const openFormModal = () => {\n    setIsOpen(true);\n  };\n\n  const closeFormModal = () => {\n    setIsOpen(false);\n  };\n\n  console.log('Events are: ', events);\n\n  return (\n    <div>\n      <Header title=\"Events\" onOpenModal={openFormModal} />\n\n      <div className=\"container content\">\n        <EventList\n          events={events}\n          isLoading={isLoading}\n          dispatchData={dispatchData}\n          filters={filters}\n        />\n      </div>\n\n      {isOpen && (\n        //<EventModal onClose={showEventModal ? \"is-active\" : \"false\"} />\n        <EventModal\n          onHideModal={closeFormModal}\n          onShowModal={openFormModal}\n          dispatchData={dispatchData}\n          isOpen={isOpen}\n          events={events}\n          text=\"Submit\"\n        />\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  eventState: state.events,\n  filters: state,\n  sort: state,\n  dispatchData: state.dispatch,\n});\n\nexport default connect(mapStateToProps)(Events);\n","import EventButton from \"../events/EventButton\";\nimport { Breadcrumbs, BreadcrumbItem } from \"../UI/Breadcrumbs\";\n\nconst EventHeader = (props) => {\n  const event = props.event;\n  const statusVariant =\n    event.status === \"Active\"\n      ? \"is-success\"\n      : event.status === \"Draft\"\n      ? \"is-warning\"\n      : event.status === \"Expired\"\n      ? \"is-danger\"\n      : \"primary\";\n\n  return (\n    <section className=\"page-header\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"is-flex is-align-items-center\">\n            <h1 className=\"is-size-2 mr-3\">\n              {props.title\n                ? `Event ${event.slug}: ${event.title}`\n                : `Event ${event.slug}`}\n            </h1>\n            <span className={`tag is-medium ${statusVariant}`}>\n              {event.status}\n            </span>\n          </div>\n\n          <EventButton\n            text=\"Edit Event\"\n            onOpenModal={props.openFormModal}\n          />\n        </div>\n        <div className=\"row\">\n          <Breadcrumbs className=\"has-arrow-separator\">\n            <BreadcrumbItem to={`/dashboard`}>Dashboard</BreadcrumbItem>\n            <BreadcrumbItem to={`/events`}>Events</BreadcrumbItem>\n            <BreadcrumbItem\n              to={`/events/${props.slug}`}\n              className=\"is-active\"\n            >{`Event ${props.slug}`}</BreadcrumbItem>\n          </Breadcrumbs>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default EventHeader;\n","import { checkIfEmpty } from \"../../utils/utils\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEnvelope, faPhone } from \"@fortawesome/free-solid-svg-icons\";\n\nconst EventClientDetails = (props) => {\n  const event = props.event;\n\n  return (\n    <div className=\"details-wrap box\">\n      <div id=\"eventClientDetails\" className=\"block entry-title\">\n        <h4 className=\"title\">Client Details</h4>\n      </div>\n\n      <table className=\"table\">\n        <tbody>\n          <tr>\n            <td>\n              <h5>Client:</h5>\n            </td>\n            <td>\n              <p>{`${event.client}`}</p>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <h5>Company:</h5>\n            </td>\n            <td>\n              <p>{`${event.company}`}</p>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default EventClientDetails;\n","import {\n  getFormattedDate,\n  getFormattedPrice,\n  checkIfEmpty,\n} from \"../../utils/utils\";\n\nconst EventDetails = (props) => {\n\n  const event = props.event;\n\n  return (\n    <div className=\"details-wrap box\">\n      <div id=\"eventDetails\" className=\"block entry-title\">\n        <h4 className=\"title\">Event Details</h4>\n      </div>\n\n      <table className=\"table\">\n        <tbody>\n          <tr>\n            <td>\n              <h5>Event ID:</h5>\n            </td>\n            <td>\n              <p>{`#${event.id}`}</p>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <h5>Start Date:</h5>\n            </td>\n            <td>\n              <p>{checkIfEmpty(getFormattedDate(event.startDate))}</p>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <h5>Start Time:</h5>\n            </td>\n            <td>\n              <p>{checkIfEmpty(event.startTime)}</p>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <h5>End Date:</h5>\n            </td>\n            <td>\n              <p>{checkIfEmpty(getFormattedDate(event.endDate))}</p>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <h5>End Time:</h5>\n            </td>\n            <td>\n              <p>{checkIfEmpty(event.endTime)}</p>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <h5>Last Year's Amount:</h5>\n            </td>\n            <td>\n              <p>{checkIfEmpty(getFormattedPrice(event.lastYearsPrice))}</p>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <h5>Notes</h5>\n            </td>\n            <td>\n              <p>{checkIfEmpty(event.notes)}</p>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default EventDetails;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBook } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Attachments = () => {\n  return (\n    <div className=\"box\">\n      <div className=\"container\">\n        <div className=\"column\">\n          <div id=\"attachments\" className=\"block entry-title\">\n            <h4 className=\"title\">Attachments</h4>\n          </div>\n          <span className=\"icon is-large\">\n            <FontAwesomeIcon className=\"fas fa-2x\" icon={faBook} />\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Attachments;\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { Fragment } from \"react\";\nimport { useParams, NavLink } from \"react-router-dom\";\nimport { NavHashLink } from \"react-router-hash-link\";\n\nimport EventHeader from \"../components/singleEvent/EventHeader\";\nimport EventClientDetails from \"../components/singleEvent/EventClientDetails\";\nimport EventDetails from \"../components/singleEvent/EventDetails\";\nimport Attachments from \"../components/singleEvent/Attachments\";\n\nimport EventModal from \"../components/events/EventModal.js\";\n\nconst EventSingle = (props) => {\n  const dispatchData = props.dispatch;\n  let { slug, id } = useParams();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSelected, setIsSelected] = useState(false);\n\n  const setActiveLink = (e) => {\n    setIsSelected(true);\n  };\n\n  const events = props.events;\n\n  console.log(\"Events in single are \", props.events);\n\n  let event = events.find((c) => {\n    return c.slug === slug;\n  });\n\n  const openFormModal = () => {\n    setIsOpen(true);\n  };\n\n  const closeFormModal = () => {\n    setIsOpen(false);\n  };\n\n  if (!event) {\n    return <p>Event not found!</p>;\n  }\n\n  // const checkIfEmpty = (data) => {\n  //   if (data === email) {\n  //     return email ? <a href={`mailto:${email}`}>{email}</a> : `Nothing found`;\n  //   }\n\n  //   return data ? data : \"Nothing found\";\n  // };\n\n  return (\n    <Fragment>\n      <EventHeader id={id} slug={slug} event={event} openFormModal={openFormModal} />\n\n      <section id=\"eventSingle\" className=\"section page-single\">\n        <div className=\"container\">\n          <div className=\"columns\">\n            <div className=\"column is-one-quarter sidebar\">\n              <div className=\"box\">\n                <div className=\"menu\">\n                  <ul className=\"menu-list\">\n                    <li>\n                      <NavHashLink\n                        activeClassName=\"is-active\"\n                        smooth\n                        to=\"#eventDetails\"\n                      >\n                        Event Details\n                      </NavHashLink>\n                    </li>\n                    <li>\n                      <NavHashLink\n                        activeClassName=\"is-active\"\n                        smooth\n                        to=\"#eventClientDetails\"\n                      >\n                        Client Details\n                      </NavHashLink>\n                    </li>\n                    <li>\n                      <NavHashLink\n                        activeClassName=\"is-active\"\n                        smooth\n                        to=\"#attachments\"\n                      >\n                        Attachments\n                      </NavHashLink>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n            <div className=\"column is-three-quarters\">\n              <EventDetails event={event} />\n              <EventClientDetails event={event} />\n              <Attachments event={event} />\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {isOpen && (\n        <EventModal\n          type=\"edit\"\n          event={event}\n          onHideModal={closeFormModal}\n          onShowModal={openFormModal}\n          dispatchData={dispatchData}\n          isOpen={isOpen}\n          text=\"Update Event\"\n        />\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    events: state.events,\n    dispatchData: state.dispatch,\n  };\n};\n\nexport default connect(mapStateToProps)(EventSingle);\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBell } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NotificationButton = (props) => {\n  return (\n    <button onClick={props.onShowToast} className=\"notification-bell\">\n      <span className=\"icon\">\n        {<FontAwesomeIcon size=\"2x\" icon={faBell} />}\n      </span>\n      <span className=\"notification-counter\">\n        {props.notifications.length > 0 ? props.notifications.length : \"0\"}\n      </span>\n    </button>\n  );\n};\n\nexport default NotificationButton;\n","import { NavLink } from \"react-router-dom\";\nimport NotificationButton from \"./UI/NotificationButton\";\n\nconst MainNavigation = (props) => {\n  return (\n    <nav className=\"nav\">\n      <ul>\n        <li>\n          <NavLink activeClassName=\"active\" to=\"/dashboard\">\n            Dashboard\n          </NavLink>\n        </li>\n        <li>\n          <NavLink activeClassName=\"active\" to=\"/contracts\">\n            Contracts\n          </NavLink>\n        </li>\n        <li>\n          <NavLink activeClassName=\"active\" to=\"/events\">\n            Events\n          </NavLink>\n        </li>\n        <li>\n          <NotificationButton\n            onShowNotification={props.onShowNotification}\n            notifications={props.notifications}\n            onShowToast={props.onShowToast}\n          />\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default MainNavigation;\n","import MainNavigation from \"./MainNavigation\";\n\nconst TopBar = (props) => {\n  return (\n    <section className=\"topBar\">\n      <div className=\"logo\">DanFree Design</div>\n      <MainNavigation\n        onShowNotification={props.onShowNotification}\n        onHideNotification={props.onHideNotification}\n        onShowToast={props.onShowToast}\n        notifications={props.notifications}\n      />\n    </section>\n  );\n};\n\nexport default TopBar;\n","import { ToastContainer } from \"react-toastify\";\nimport OutsideClick from \"../../hooks/outside-click\";\nimport { getCreatedAt } from \"../../utils/utils\";\nimport { Link } from \"react-router-dom\";\n\nconst ToastMsg = (props) => {\n  const notification = props.notification;\n  const title = notification.title;\n  const msg = notification.message;\n  const createdAt = getCreatedAt(notification.createdAt);\n  const url = notification.url;\n\n  if (props.status === \"pending\") {\n    return <span className=\"is-warning\">{props.status}</span>;\n  }\n  if (props.status === \"expired\") {\n    return <span className=\"is-danger\">{props.status}</span>;\n  }\n\n  return (\n    <div className=\"card\" key={props.index}>\n      <div className=\"card-header\">\n        <span className=\"h6 notification__title\">\n          <Link to={`${url}`}>{title}</Link>\n        </span>\n\n        <span className=\"is-tiny\">{createdAt}</span>\n      </div>\n      <div className=\"card-content\">\n        <span className=\"is-small notification__title\">{title}</span>\n        <p className=\"is-small\">{msg}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default ToastMsg;\n","import React, { Fragment, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { toast, ToastContainer } from \"react-toastify\";\n\nimport TopBar from \"./TopBar\";\nimport Header from \"./Header\";\nimport Notification from \"./UI/Notification-v1\";\nimport ToastMsg from \"./UI/ToastMsg\";\n\nconst Layout = (props) => {\n  const notifications = props.notifications;\n  const [notificationIsShown, setNotificationIsShown] = useState(false);\n\n  const showNotifications = () => {\n    setNotificationIsShown(true);\n  };\n\n  const hideNotifications = () => {\n    setNotificationIsShown(false);\n  };\n\n  const toastMsg = (notification) => {\n    const title = notification.title;\n    const msg = notification.message;\n    const createdAt = notification.createdAt;\n\n    return (\n      <div className=\"card\">\n        <div className=\"card-header\">\n          <span className=\"is-small notification__title\">{title}</span>\n          <span className=\"is-tiny\">{createdAt}</span>\n        </div>\n        <div className=\"card-content\">\n          <span className=\"is-small notification__title\">{title}</span>\n          <p className=\"is-small\">{msg}</p>\n        </div>\n      </div>\n    );\n  };\n\n  const showToast = () => {\n    notifications.map((notification, index) => {\n      return toast(<ToastMsg notification={notification} index={index} />, {\n        position: \"top-right\",\n        autoClose: true,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: false,\n        progress: undefined,\n      });\n    });\n  };\n\n  const closeButton = ({ closeToast }) => (\n    <button className=\"button\" onClick={closeToast}>\n      Close Notifications\n    </button>\n  );\n\n  return (\n    <Fragment>\n      <TopBar\n        onShowNotification={showNotifications}\n        onHideNotification={hideNotifications}\n        onShowToast={showToast}\n        notifications={notifications}\n      />\n      <main>{props.children}</main>\n      {/* {notificationIsShown && (\n        <Notification\n          notifications={notifications}\n          onClick={hideNotifications}\n          isToggled={notificationIsShown}\n        />\n      )} */}\n\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={3000}\n        hideProgressBar\n        newestOnTop\n        rtl={false}\n        draggable\n        pauseOnHover\n        limit={5}\n        containerId=\"notification-sidebar\"\n      />\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    notifications: state.notifications,\n  };\n};\n\nexport default connect(mapStateToProps)(Layout);\n","import { Fragment } from \"react\";\nimport {\n  Redirect,\n  Route,\n  Switch,\n  useParams,\n  useRouteMatch,\n  BrowserRouter as Router,\n} from \"react-router-dom\";\n\nimport Dashboard from \"./pages/Dashboard\";\nimport Contracts from \"./pages/Contracts\";\nimport ContractSingle from \"./pages/ContractSingle\";\nimport ContractForm from \"./components/contracts/ContractForm\";\nimport Events from \"./pages/Events\";\nimport EventSingle from \"./pages/EventSingle\";\nimport EventForm from \"./components/events/EventForm\";\nimport NotFound from \"./components/contracts/NoContractsFound\";\n\nimport Layout from \"./components/Layout\";\n\nimport { toast } from \"react-toastify\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"bulma/css/bulma.min.css\";\n\nimport \"./App.scss\";\n\ntoast.configure();\nfunction App() {\n  return (\n    <Fragment>\n      <Router>\n        <Layout>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Redirect to=\"/dashboard\" />\n            </Route>\n\n            <Route path=\"/dashboard\">\n              <Dashboard />\n            </Route>\n\n            <Route path={`/contracts`} component={ContractForm} exact>\n              <Contracts />\n            </Route>\n\n            <Route path={`/contracts/:slug`} component={ContractForm}>\n              <ContractSingle />\n            </Route>\n\n            <Route path={`/contracts`} component={ContractForm} exact>\n              <Contracts />\n            </Route>\n\n            <Route path={`/events`} component={EventForm} exact>\n              <Events />\n            </Route>\n\n            <Route path={`/events/:slug`} component={EventForm}>\n              <EventSingle />\n            </Route>\n\n            <Route path={`/events`} component={EventForm} exact>\n              <Events />\n            </Route>\n\n            <Route component={NotFound} />\n          </Switch>\n        </Layout>\n      </Router>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import {\n  ADD_CONTRACT,\n  EDIT_CONTRACT,\n  FETCH_CONTRACT,\n  GET_CONTRACTS,\n  LOAD_TABLE,\n  REMOVE_CONTRACT,\n} from \"../constants/ActionTypes\";\n\n//const initialContractState = [];\nconst initialState = {\n  contractObj: {\n    contracts: [],\n    isLoading: false,\n  },\n};\n\nexport default function contractReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_CONTRACT:\n      return [...state, action.contract];\n    case REMOVE_CONTRACT:\n      return state.filter(({ id }) => id !== action.id);\n    case FETCH_CONTRACT:\n      return state.filter(({ id }) => id === action.id);\n    case EDIT_CONTRACT:\n      return state.map((contract) => {\n        if (contract.id === action.id) {\n          return {\n            ...contract,\n            ...action.updates,\n          };\n        } else {\n          return contract;\n        }\n      });\n    case LOAD_TABLE:\n      return {\n        ...state,\n        contracts: action.payload,\n        isLoading: true,\n      };\n    case GET_CONTRACTS:\n      return action.contracts;\n    default:\n      return state;\n  }\n}\n\n// export default function contractReducer(state = initialLoadingState, action) {\n//   switch (action.type) {\n//     case \"ADD_CONTRACT\":\n//       return [...state, action.contract];\n//     case \"REMOVE_CONTRACT\":\n//       return state.filter(({ id }) => id !== action.id);\n//     case \"EDIT_CONTRACT\":\n//       return state.map((contract) => {\n//         if (contract.id === action.id) {\n//           return {\n//             ...contract,\n//             ...action.updates,\n//           };\n//         } else {\n//           return contract;\n//         }\n//       });\n//     case \"GET_CONTRACTS\":\n//       return {\n//         contracts: action.contracts,\n//         isLoading: state.isLoading,\n//       };\n\n//     default:\n//       return state;\n//   }\n// }\n","import {\n  ADD_EVENT,\n  EDIT_EVENT,\n  FETCH_EVENT,\n  GET_EVENTS,\n  LOAD_EVENTS_TABLE,\n  REMOVE_EVENT,\n} from \"../constants/ActionTypes\";\n\nconst initialState = {\n  eventObj: {\n    events: [],\n    isLoading: false,\n  },\n};\n\nexport default function eventReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_EVENT:\n      return [...state, action.event];\n    case REMOVE_EVENT:\n      return state.filter(({ id }) => id !== action.id);\n    case FETCH_EVENT:\n      return state.filter(({ id }) => id === action.id);\n    case EDIT_EVENT:\n      return state.map((event) => {\n        if (event.id === action.id) {\n          return {\n            ...event,\n            ...action.updates,\n          };\n        } else {\n          return event;\n        }\n      });\n    case LOAD_EVENTS_TABLE:\n      return {\n        ...state,\n        events: action.payload,\n        isLoading: true,\n      };\n    case GET_EVENTS:\n      return action.events;\n    default:\n      return state;\n  }\n}\n","import {\n  ADD_UPLOAD,\n  EDIT_UPLOAD,\n  GET_UPLOADS,\n  LOAD_UPLOADS_TABLE,\n  REMOVE_UPLOAD,\n} from \"../constants/ActionTypes\";\n\nconst initialState = {\n  uploadObj: {\n    uploads: [],\n  },\n};\n\nexport default function uploadsReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_UPLOAD:\n      return [...state, action.upload];\n    case REMOVE_UPLOAD:\n      return state.filter(({ id }) => id !== action.id);\n    case EDIT_UPLOAD:\n      return state.map((upload) => {\n        if (upload.id === action.id) {\n          return {\n            ...upload,\n            ...action.updates,\n          };\n        } else {\n          return upload;\n        }\n      });\n    case LOAD_UPLOADS_TABLE:\n      return {\n        ...state,\n        uploads: action.payload,\n      };\n    case GET_UPLOADS:\n      return action.uploads;\n    default:\n      return state;\n  }\n}\n","import { ADD_PLUGIN } from \"../constants/ActionTypes\";\n\nconst initialState = {\n  plugins: [],\n};\n\nexport default function eventReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_PLUGIN:\n      return [...state, action.event];\n\n    default:\n      return state;\n  }\n}\n","import {\n  ADD_NOTIFICATION,\n  GET_NOTIFICATIONS,\n  REMOVE_NOTIFICATION,\n  LOAD_NOTIFICATION_TABLE,\n} from \"../constants/ActionTypes\";\n\nconst initialState = {\n  notificationObj: {\n    notifications: [],\n  },\n};\n\nexport default function notificationReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_NOTIFICATION:\n      return [...state, action.notification];\n    case REMOVE_NOTIFICATION:\n      return state.filter(({ id }) => id !== action.id);\n    case LOAD_NOTIFICATION_TABLE:\n      return {\n        ...state,\n        notifications: action.payload,\n      };\n    case GET_NOTIFICATIONS:\n      return action.notifications;\n    default:\n      return state;\n  }\n}\n","import { UPDATE_FILTER } from \"../filters/actionTypes\";\n\nconst initialState = {\n  items: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_FILTER:\n      return {\n        ...state,\n        items: {\n          ...state.filters,\n          status: action.payload,\n        },\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport contractReducer from \"../reducers/contractsSlice\";\nimport eventReducer from \"../reducers/eventsSlice\";\nimport uploadReducer from \"../reducers/uploadsSlice\";\nimport pluginReducer from \"../reducers/pluginsSlice\";\nimport notificationReducer from \"../reducers/notificationsSlice\";\nimport uiReducer from \"../reducers/uiSlice\";\nimport filtersReducer from \"../reducers/filtersSlice\";\nimport sortReducer from \"../reducers/sortReducer\";\n\nexport default combineReducers({\n  contracts: contractReducer,\n  events: eventReducer,\n  notifications: notificationReducer,\n  plugins: pluginReducer,\n  ui: uiReducer,\n  filters: filtersReducer,\n  uploads: uploadReducer,\n  //sort: sortReducer,\n});\n","import { compose, createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./reducers\";\nimport thunk from \"redux-thunk\";\nimport { getEvents } from \"../actions/events\";\nimport { getNotifications } from \"../actions/notifications\";\nimport { getUploads } from \"../actions/uploads\";\nimport { getPlugins } from \"../actions/plugins\";\n\n\n//const middlewareEnhancer = applyMiddleware(thunk);\n\n// export default () => {\n//   return createStore(rootReducer, middlewareEnhancer);\n// };\n\nconst configureStore = (preloadedState) => {\n  const middleware = [thunk];\n\n  const store = createStore(\n    rootReducer,\n    preloadedState,\n    compose(\n      applyMiddleware(...middleware)\n      /* window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__() */\n    )\n  );\n\n  store.dispatch(getEvents());\n  store.dispatch(getNotifications());\n  store.dispatch(getUploads());\n  store.dispatch(getPlugins());\n\n  store.subscribe(() => {\n    const state = store.getState();\n    const persist = {\n      contracts: state.contracts,\n      events: state.events,\n      notifications: state.notifications,\n      uploads: state.uploads,\n      plugins: state.plugins,\n      isLoading: state.isLoading,\n    };\n\n    window.localStorage.setItem(\"state\", JSON.stringify(persist));\n  });\n\n  return store;\n};\n\nexport default configureStore;\n","import axios from \"../axios/axios\";\nimport { ADD_PLUGIN, GET_PLUGINS } from \"../constants/ActionTypes\";\n\nconst _addPlugin = (plugin) => ({\n  type: ADD_PLUGIN,\n  plugin,\n});\n\nconst initialState = {\n  title: \"\",\n  price: 0,\n  orderDate: \"\",\n  renewalDate: \"\",\n  status: \"\",\n};\n\nexport const addPlugin =\n  (pluginData = initialState) =>\n  (dispatch) => {\n    const plugin = {\n      title: pluginData.title,\n      price: pluginData.price,\n      orderDate: pluginData.orderDate,\n      renewalDate: pluginData.renewalDate,\n      status: pluginData.status,\n    };\n\n    return axios.post(\"plugins/add\", plugin).then((result) => {\n      dispatch(_addPlugin(result.data));\n    });\n  };\n\nconst _getPlugins = (plugins, loading) => ({\n  type: GET_PLUGINS,\n  plugins,\n});\n\nexport const getPlugins = (callback) => (dispatch, getState) => {\n  return axios\n    .get(\"plugins\")\n    .then((response) => {\n      const plugins = [];\n\n      response.data.forEach((item) => {\n        plugins.push(item);\n      });\n\n      dispatch(_getPlugins(plugins));\n    })\n    .catch((error) => {\n      if (error.response) {\n        console.log(error.response.data);\n      } else if (error.request) {\n        console.log(error.request);\n      } else {\n        console.log(\"Error\", error.message);\n      }\n    });\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport configureStore from \"./store/store\";\nimport { getContracts } from \"./actions/contracts\";\nimport \"./index.css\";\n\nimport { Provider } from \"react-redux\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst store = configureStore();\n\nconst Root = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nstore.dispatch(getContracts()).then(() => {\n  ReactDOM.render(Root, document.getElementById(\"root\"));\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}